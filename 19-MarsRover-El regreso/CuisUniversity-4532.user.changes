

----STARTUP---- (3 June 2021 20:14:25) as C:\Users\ezequ\Desktop\windows64\CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 20:14:42' prior: 51010541!
test29SpecialSummaryReportOfPortfolioWithAccountWithRegisteredDeposit

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 1000  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report last equals: String tab, 'Balance = 100'.
	
! !

----End fileIn of C:\Users\ezequ\Downloads\2021-1c-main (4)\2021-1c-main\19-MarsRover-El regreso\MarsRover-WithHeading.st----!

!classRemoval: #West stamp: 'ET 6/3/2021 20:15:22'!
CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #South stamp: 'ET 6/3/2021 20:15:22'!
CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #North stamp: 'ET 6/3/2021 20:15:23'!
CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #East stamp: 'ET 6/3/2021 20:15:23'!
CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #CardinalPoint stamp: 'ET 6/3/2021 20:15:24'!
Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classRemoval: #MarsRoverTests stamp: 'ET 6/3/2021 20:15:24'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

TestCase subclass: #Testxx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Testxx category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 20:16:26'!
TestCase subclass: #Testxx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Testxx methodsFor: 'no messages' stamp: 'ET 6/3/2021 20:20:54'!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addPositionLog: log.
	
	self assert: log size equals: 1.
	self assert: '0@0' equals: log first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:21:34' prior: 51012213!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover.
	
	marsRover addPositionLog: log.
	
	self assert: log size equals: 1.
	self assert: '0@0' equals: log first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:22:09' prior: 51012223!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover process: 'f'.
	
	marsRover addPositionLog: log.
	
	self assert: log size equals: 1.
	self assert: '0@1' equals: log first.
	
	! !

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:22:18'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:22:44'!
addPositionLog: anOrderedCollection 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:23:15' prior: 51012247!
addPositionLog: anOrderedCollection 
	
	anOrderedCollection add: '0@1'.! !

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:23:16'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:23:16'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:23:33'!
test02

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover process: 'b'.
	
	marsRover addPositionLog: log.
	
	self assert: log size equals: 1.
	self assert: '0@-1' equals: log first.
	
	! !

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:23:34'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:23:54' prior: 51012252!
addPositionLog: anOrderedCollection 
	
	anOrderedCollection add: position asString.! !

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:23:56'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:23:56'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:23:56'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:24:25'!
test03

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addPositionLog: log.
	
	self assert: log isEmpty.
	
	! !

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:25:07'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:26:25' prior: 51012234!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addPositionLog: log.
	
	marsRover process: 'f'.
	
	self assert: log size equals: 1.
	self assert: '0@1' equals: log first.
	
	! !

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:26:37'!
FAILURE!

!methodRemoval: Testxx #test02 stamp: 'ET 6/3/2021 20:27:38'!
test02

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover process: 'b'.
	
	marsRover addPositionLog: log.
	
	self assert: log size equals: 1.
	self assert: '0@-1' equals: log first.
	
	!

!methodRemoval: Testxx #test03 stamp: 'ET 6/3/2021 20:27:42'!
test03

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addPositionLog: log.
	
	self assert: log isEmpty.
	
	!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:23:15' prior: 51012274!
addPositionLog: anOrderedCollection 
	
	anOrderedCollection add: '0@1'.! !

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:27:58'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:27:58'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:28:12'!
test02

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addPositionLog: log.
	
	marsRover process: 'b'.
	
	self assert: log size equals: 1.
	self assert: '0@-1' equals: log first.
	
	! !

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:28:15'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 20:29:16'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:29:14' prior: 51012327!
addPositionLog: anOrderedCollection 
	
	positionLog := anOrderedCollection.! !
!MarsRover methodsFor: 'command processing' stamp: 'ET 6/3/2021 20:29:50' prior: 51011865!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ].
	
	positionLog add: position.
! !

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:29:56'!
FAILURE!
!MarsRover methodsFor: 'command processing' stamp: 'ET 6/3/2021 20:30:15' prior: 51012363!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ].
	
	positionLog add: position asString.
! !

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:30:17'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:30:17'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:30:17'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:31:36'!
test03

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addPositionLog: log.
	
	marsRover process: 'ff'.
	
	self assert: log size equals: 2.
	self assert: '0@1' equals: log first.
	self assert: '0@2' equals: log second.
	
	! !

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:31:43'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 20:33:57' prior: 51011849!
moveForward
	
	head moveForward: self.
	positionLog add: position asString.! !
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 20:34:04' prior: 51011841!
moveBackward
	
	head moveBackward: self.
	positionLog add: position asString.! !
!MarsRover methodsFor: 'command processing' stamp: 'ET 6/3/2021 20:34:14' prior: 51012373!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ].
	
	
! !

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:34:15'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:34:15'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:34:15'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:34:15'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:35:27'!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'East' equals: log first.
	
	! !

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:35:29'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:35:36'!
addHeadingLog: anOrderedCollection 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:35:55' prior: 51012438!
addHeadingLog: anOrderedCollection 
	
	anOrderedCollection add: 'East'.! !

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:35:57'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:35:57'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:35:57'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:35:57'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:35:57'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:36:18'!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'South' equals: log first.
	
	! !

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:36:19'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 20:37:00'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLog headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:36:58' prior: 51012443!
addHeadingLog: anOrderedCollection 

	headingLog := anOrderedCollection.
! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:40:48' prior: 51011803!
headSouth
	
	head := MarsRoverHeadingSouth new
	headingLog add: 'South'.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:41:03' prior: 51011795!
headEast
	
	head := MarsRoverHeadingEast new
	headingLog add: 'East'.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:41:08' prior: 51012490!
headEast
	
	head := MarsRoverHeadingEast new.
	headingLog add: 'East'.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:41:14' prior: 51012485!
headSouth
	
	head := MarsRoverHeadingSouth new.
	headingLog add: 'South'.! !

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:41:19'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:41:19'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:41:19'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:41:19'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:41:19'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:41:19'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:41:32'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:41:32'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:41:32'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:41:32'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:41:32'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:41:32'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:41:59' prior: 51012458!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'North' equals: log first.
	
	! !

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:42:01'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:44:56' prior: 51011799!
headNorth
	
	head := MarsRoverHeadingNorth new.
	headingLog add: 'North'.! !

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:44:59'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:45:00'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:45:00'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:45:00'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:45:00'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:45:00'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:36:18' prior: 51012530!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'South' equals: log first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:45:36'!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'North' equals: log first.
	
	! !

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:45:38'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:45:58' prior: 51012572!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'West' equals: log first.
	
	! !

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:46:01'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:47:25' prior: 51011807!
headWest
	
	head := MarsRoverHeadingWest new.
	headingLog add: 'West'.! !

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:47:29'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:45:36' prior: 51012598!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'North' equals: log first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:47:54'!
test07

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'West' equals: log first.
	
	
	! !

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'ET 6/3/2021 20:47:56'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:47:56'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:48:09'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:48:48' prior: 51011811!
rotateLeft
	
	head rotateLeft: self.
	headingLog add: head class cardinalPoint asString.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:48:56' prior: 51011815!
rotateRight
	
	head rotateRight: self.
	headingLog add: head class cardinalPoint asString.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:49:01' prior: 51012611!
headWest
	
	head := MarsRoverHeadingWest new.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:49:06' prior: 51012500!
headSouth
	
	head := MarsRoverHeadingSouth new.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:49:10' prior: 51012543!
headNorth
	
	head := MarsRoverHeadingNorth new.! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:49:14' prior: 51012495!
headEast
	
	head := MarsRoverHeadingEast new.! !

!testRun: #MarsRoverTest #test01 stamp: 'ET 6/3/2021 20:49:16'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ET 6/3/2021 20:49:16'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'ET 6/3/2021 20:49:16'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'ET 6/3/2021 20:49:16'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:49:22'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:51:15' prior: 51012722!
rotateLeft
	
	head rotateLeft: self.! !

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:51:18'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:52:33'!
test08

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'l'.
	
	self assert: log size equals: 1.
	self assert: 'East' equals: log first.
	
	
	! !

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 20:52:34'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 20:53:15' prior: 51012806!
rotateLeft
	
	head rotateLeft: self.
	headingLog add: head class cardinalPoint asString.! !

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 20:53:23'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:59:54'!
test09

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := OrderedCollection new.
	
	marsRover addPositionWindow: log.
	
	marsRover process: 'l'.
	
	self assert: log size equals: 1.
	self assert: 'East' equals: log first.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:00:01' prior: 51012864!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := OrderedCollection new.
	
	marsRover addPositionWindow: window.
	
	marsRover process: 'l'.
	
	self assert: window size equals: 1.
	self assert: 'East' equals: window first.
	
	
	! !

!classDefinition: #RoverWindow category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:03:01'!
Object subclass: #RoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:02:55' prior: 51012875!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.

	
	self assert: window roverPositionText equals: '0@0'.
	self assert: window roverHeadingText equals: 'South'.
	
	
	! !

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:03:08'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:03:23'!
addWindow: aRoverWindow 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:03:50'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionLog headingLog roverWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:03:43' prior: 51012907!
addWindow: aRoverWindow 
	roverWindow := aRoverWindow.! !

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:03:54'!
ERROR!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:04:01'!
roverPositionText
	self shouldBeImplemented.! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:05:13' prior: 51012928!
roverPositionText
	^'0@0'.! !

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:05:15'!
ERROR!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:05:22'!
roverHeadingText
	self shouldBeImplemented.! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:05:29' prior: 51012939!
roverHeadingText
	^'South'.! !

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:05:31'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:07:25'!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'f'.

	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:07:29'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 21:08:50' prior: 51012400!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog add: position asString].! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:08:51'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:10:47' prior: 51012921!
addWindow: aRoverWindow
	roverWindow := aRoverWindow.
	roverWindow newPosition: position asString.
	roverWindow newHeading: head class cardinalPoint asString.! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:10:56'!
ERROR!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:11:02'!
newPosition: aString 
	self shouldBeImplemented.! !

!classDefinition: #RoverWindow category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:11:31'!
Object subclass: #RoverWindow
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:11:30' prior: 51012999!
newPosition: aPosicionPoint 
	position := aPosicionPoint.! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:11:35'!
ERROR!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:11:41'!
newHeading: aString 
	self shouldBeImplemented.! !

!classDefinition: #RoverWindow category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:12:07'!
Object subclass: #RoverWindow
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:12:06' prior: 51013019!
newHeading: aCardinalPoint
	heading := aCardinalPoint.! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:12:10'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 21:13:31' prior: 51012980!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow  ifNotNil: [roverWindow newPosition: position asString].! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:13:36'!
FAILURE!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:14:00' prior: 51012933!
roverPositionText
	^position.! !

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:14:01'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:14:01'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:14:01'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:14:01'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:14:01'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:14:01'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:14:02'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:14:02'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:14:02'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:14:02'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:14:02'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:14:28'!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'b'.

	
	self assert: window roverPositionText equals: '0@1'.
	
	
	! !

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:14:29'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 21:15:15' prior: 51012405!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow ifNotNil: [roverWindow newPosition: position asString].! !

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:15:18'!
FAILURE!

marsRover!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:17:03'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:18:19' prior: 51013076!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'r'.

	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:18:22'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 21:19:00' prior: 51012728!
rotateRight
	
	head rotateRight: self.
	headingLog ifNotNil: [headingLog add: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow newHeading: head class cardinalPoint asString].! !

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:19:02'!
FAILURE!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:19:10'!
FAILURE!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:19:29' prior: 51012944!
roverHeadingText
	^heading.! !

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:19:32'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:19:34'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:19:34'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:19:34'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:19:34'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:19:35'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:19:47'!
test12

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'l'.

	
	self assert: window roverHeadingText equals: 'East'.
	
	
	! !

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:19:49'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 21:20:28' prior: 51012840!
rotateLeft
	
	head rotateLeft: self.
	headingLog ifNotNil: [headingLog add: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow newHeading: head class cardinalPoint asString].! !

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:20:30'!
FAILURE!

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:20:42'!
PASSED!

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:27:00'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:27:35'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'ET 6/3/2021 21:27:49' prior: 51011790!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading.
	
	xxxx := OrderedCollection new.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:28:17'!
addyyyy: zzzz
	
	xxxx add: zzzz.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:30:03'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:30:04'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx positionLog roverWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 21:29:57' prior: 51013039!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow  ifNotNil: [roverWindow newPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !
!MarsRover methodsFor: 'moving' stamp: 'ET 6/3/2021 21:30:21' prior: 51013088!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow ifNotNil: [roverWindow newPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'ET 6/3/2021 21:30:38'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx positionLog roverWindow headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 21:30:35' prior: 51013215!
rotateLeft
	
	head rotateLeft: self.
	headingLog ifNotNil: [headingLog add: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow newHeading: head class cardinalPoint asString].
	xxxx do: [:zzzz | zzzz updateNewHeading: position].! !
!MarsRover methodsFor: 'heading' stamp: 'ET 6/3/2021 21:30:46' prior: 51013136!
rotateRight
	
	head rotateRight: self.
	headingLog ifNotNil: [headingLog add: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow newHeading: head class cardinalPoint asString].
	xxxx do: [:zzzz | zzzz updateNewHeading: position].! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:17'!
updateNewHeading: aCardinalPoint
	heading := aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:17' prior: 51012989!
addWindow: aRoverWindow
	roverWindow := aRoverWindow.
	roverWindow newPosition: position asString.
	roverWindow updateNewHeading: head class cardinalPoint asString.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:17' prior: 51013350!
rotateLeft
	
	head rotateLeft: self.
	headingLog ifNotNil: [headingLog add: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow updateNewHeading: head class cardinalPoint asString].
	xxxx do: [:zzzz | zzzz updateNewHeading: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:17' prior: 51013361!
rotateRight
	
	head rotateRight: self.
	headingLog ifNotNil: [headingLog add: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow updateNewHeading: head class cardinalPoint asString].
	xxxx do: [:zzzz | zzzz updateNewHeading: position].! !

!methodRemoval: RoverWindow #newHeading: stamp: 'ET 6/3/2021 21:31:17'!
newHeading: aCardinalPoint
	heading := aCardinalPoint.!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:35'!
updateNewPosition: aPosicionPoint 
	position := aPosicionPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:35' prior: 51013331!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:35' prior: 51013377!
addWindow: aRoverWindow
	roverWindow := aRoverWindow.
	roverWindow updateNewPosition: position asString.
	roverWindow updateNewHeading: head class cardinalPoint asString.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:31:35' prior: 51013321!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow  ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !

!methodRemoval: RoverWindow #newPosition: stamp: 'ET 6/3/2021 21:31:35'!
newPosition: aPosicionPoint 
	position := aPosicionPoint.!

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test01 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test02 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test03 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test04 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test05 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test06 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test07 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test08 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test09 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test10 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test11 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!testRun: #Testxx #test12 stamp: 'ET 6/3/2021 21:31:43'!
PASSED!

!methodRemoval: MarsRover #initializeAt:facing: stamp: 'ET 6/3/2021 21:40:38'!
initializeAt: aPoint facing: aCardinalPoint 
	point := aPoint.
	cardinalPoint := aCardinalPoint.!

!methodRemoval: MarsRover #changeOrientationUsing: stamp: 'ET 6/3/2021 21:40:59'!
changeOrientationUsing: anOrientationCommand

	anOrientationCommand = $l ifTrue:[cardinalPoint := cardinalPoint turnLeft].
	anOrientationCommand = $r ifTrue:[cardinalPoint := cardinalPoint turnRight].!

!methodRemoval: MarsRover #changePositionUsing: stamp: 'ET 6/3/2021 21:40:59'!
changePositionUsing: aPotentialMoveCommand
	
	point := point + (self offsetFromMoveCommand: aPotentialMoveCommand).!

!methodRemoval: MarsRover #offsetFromMoveCommand: stamp: 'ET 6/3/2021 21:40:59'!
offsetFromMoveCommand: aMoveCommand

	aMoveCommand = $f ifTrue: [^ cardinalPoint forwardOffset ].
	aMoveCommand = $b ifTrue: [^ cardinalPoint backwardOffset ].
	^ 0@0!

!methodRemoval: MarsRover #isAt:facing: stamp: 'ET 6/3/2021 21:41:18'!
isAt: aPoint facing: aCardinalPointType 
	^ aPoint = point and: (cardinalPoint isKindOf: aCardinalPointType )!

!testRun: #MarsRoverTest #test01 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ET 6/3/2021 21:41:29'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:42:43' prior: 51012894!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addyyyy: window.

	
	self assert: window roverPositionText equals: '0@0'.
	self assert: window roverHeadingText equals: 'South'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:42:51' prior: 51012968!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addyyyy: window.
	
	marsRover process: 'f'.

	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:42:56' prior: 51013124!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addyyyy: window.
	
	marsRover process: 'r'.

	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:43:01' prior: 51013203!
test12

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addyyyy: window.
	
	marsRover process: 'l'.

	
	self assert: window roverHeadingText equals: 'East'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:02:55' prior: 51013549!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.

	
	self assert: window roverPositionText equals: '0@0'.
	self assert: window roverHeadingText equals: 'South'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:07:25' prior: 51013560!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'f'.

	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:18:19' prior: 51013570!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'r'.

	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 21:19:47' prior: 51013580!
test12

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.
	
	marsRover process: 'l'.

	
	self assert: window roverHeadingText equals: 'East'.
	
	
	! !

!methodRemoval: MarsRover class #at:facing: stamp: 'ET 6/3/2021 21:47:20'!
at: aPoint facing: aCardinalPoint 
	^self new initializeAt: aPoint facing: aCardinalPoint !

!methodRemoval: MarsRover #processPackage: stamp: 'ET 6/3/2021 21:52:27'!
processPackage: aPackage
	aPackage do: [ :command| 
		#($f $b $l $r) detect: [:aPotentialCommand| aPotentialCommand = command.] ifNone: [^ self ].
		self changeOrientationUsing: command .
		self changePositionUsing: command.
	]!

----STARTUP---- (6 June 2021 11:54:56) as /home/julian/facu/ingenieria1/ambientesCuis/MarsRoverRevege/CuisUniversity-4532.image!


!testRun: #MarsRoverTest #test01 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 11:55:16'!
PASSED!
!Behavior method!
at: aPosition heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeAt:
			(aPosition
				cover: (66 to: 74)
				declaredAt: (5 to: 13))
		heading:
			([
			(MarsRoverHeading
				cover: (86 to: 101)
				declaredAt: (86 to: 101)) heading:
				(aCardinalPoint
					cover: (112 to: 125)
					declaredAt: (24 to: 37)) ] valueCoveringAll:
				{103 to: 110}) ] valueCoveringAll:
		{52 to: 64. 76 to: 83}.! !
!Behavior method!
heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{28 to: 31}) subclasses ] valueCoveringAll:
		{33 to: 42})
		detect: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (84 to: 106)
				declaredAt: (58 to: 80)) isFor:
				(aCardinalPoint
					cover: (115 to: 128)
					declaredAt: (10 to: 23)) ] valueCoveringAll:
				{108 to: 113} ]
		ifFound: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (172 to: 194)
				declaredAt: (146 to: 168)) new ] valueCoveringAll:
				{196 to: 198} ]
		ifNone: [
			[
			(self coverAll:
				{214 to: 217}) error:
				([
				(MarsRover
					cover: (226 to: 234)
					declaredAt: (226 to: 234)) invalidCardinalPointErrorDescription ] valueCoveringAll:
					{236 to: 271}) ] valueCoveringAll:
				{219 to: 224} ]] valueCoveringAll:
		{47 to: 53. 134 to: 141. 204 to: 210}.! !
!Behavior method!
isFor: aCardinalPoint
	^ [
	([
	(self coverAll:
		{26 to: 29}) cardinalPoint ] valueCoveringAll:
		{31 to: 43}) =
		(aCardinalPoint
			cover: (47 to: 60)
			declaredAt: (8 to: 21)) ] valueCoveringAll:
		{45 to: 45}.! !
!Behavior method!
cardinalPoint
	^ #East coverAll:
		{18 to: 22}.! !
!Behavior method!
cardinalPoint
	^ #North coverAll:
		{18 to: 23}.! !
!Behavior method!
initializeAt: aPosition heading: aHeading
	(position _ aPosition
		cover: (57 to: 65)
		declaredAt: (15 to: 23))
		cover: (45 to: 52)
		declaredAt: (45 to: 52).
	(head _ aHeading
		cover: (77 to: 84)
		declaredAt: (34 to: 41))
		cover: (69 to: 72)
		declaredAt: (69 to: 72).
	(xxxx _ [
	(OrderedCollection
		cover: (98 to: 114)
		declaredAt: (98 to: 114)) new ] valueCoveringAll:
		{116 to: 118})
		cover: (90 to: 93)
		declaredAt: (90 to: 93).! !
!Behavior method!
addPositionLog: anOrderedCollection
	(positionLog _ anOrderedCollection
		cover: (56 to: 74)
		declaredAt: (17 to: 35))
		cover: (41 to: 51)
		declaredAt: (41 to: 51).! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) moveForward:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(positionLog
		cover: (41 to: 51)
		declaredAt: (41 to: 51)) ifNotNil: [
		[
		(positionLog
			cover: (64 to: 74)
			declaredAt: (41 to: 51)) add:
			([
			(position
				cover: (81 to: 88)
				declaredAt: (81 to: 88)) asString ] valueCoveringAll:
				{90 to: 97}) ] valueCoveringAll:
			{76 to: 79} ]] valueCoveringAll:
		{53 to: 61}.
	[
	(roverWindow
		cover: (102 to: 112)
		declaredAt: (102 to: 112)) ifNotNil: [
		[
		(roverWindow
			cover: (126 to: 136)
			declaredAt: (102 to: 112)) updateNewPosition:
			([
			(position
				cover: (157 to: 164)
				declaredAt: (81 to: 88)) asString ] valueCoveringAll:
				{166 to: 173}) ] valueCoveringAll:
			{138 to: 155} ]] valueCoveringAll:
		{115 to: 123}.
	[
	(xxxx
		cover: (178 to: 181)
		declaredAt: (178 to: 181)) do: [ :zzzz |
		[
		(zzzz
			cover: (196 to: 199)
			declaredAt: (189 to: 192)) updateNewPosition:
			(position
				cover: (220 to: 227)
				declaredAt: (81 to: 88)) ] valueCoveringAll:
			{201 to: 218} ]] valueCoveringAll:
		{183 to: 185}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(1 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	(head
		cover: (17 to: 20)
		declaredAt: (17 to: 20)) moveBackward:
		(self coverAll:
			{36 to: 39}) ] valueCoveringAll:
		{22 to: 34}.
	[
	(positionLog
		cover: (43 to: 53)
		declaredAt: (43 to: 53)) ifNotNil: [
		[
		(positionLog
			cover: (66 to: 76)
			declaredAt: (43 to: 53)) add:
			([
			(position
				cover: (83 to: 90)
				declaredAt: (83 to: 90)) asString ] valueCoveringAll:
				{92 to: 99}) ] valueCoveringAll:
			{78 to: 81} ]] valueCoveringAll:
		{55 to: 63}.
	[
	(roverWindow
		cover: (104 to: 114)
		declaredAt: (104 to: 114)) ifNotNil: [
		[
		(roverWindow
			cover: (127 to: 137)
			declaredAt: (104 to: 114)) updateNewPosition:
			([
			(position
				cover: (158 to: 165)
				declaredAt: (83 to: 90)) asString ] valueCoveringAll:
				{167 to: 174}) ] valueCoveringAll:
			{139 to: 156} ]] valueCoveringAll:
		{116 to: 124}.
	[
	(xxxx
		cover: (179 to: 182)
		declaredAt: (179 to: 182)) do: [ :zzzz |
		[
		(zzzz
			cover: (197 to: 200)
			declaredAt: (190 to: 193)) updateNewPosition:
			(position
				cover: (221 to: 228)
				declaredAt: (83 to: 90)) ] valueCoveringAll:
			{202 to: 219} ]] valueCoveringAll:
		{184 to: 186}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(-1 coverAll:
				{40 to: 41}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
addHeadingLog: anOrderedCollection
	(headingLog _ anOrderedCollection
		cover: (53 to: 71)
		declaredAt: (16 to: 34))
		cover: (39 to: 48)
		declaredAt: (39 to: 48).! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) rotateRight:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(headingLog
		cover: (41 to: 50)
		declaredAt: (41 to: 50)) ifNotNil: [
		[
		(headingLog
			cover: (63 to: 72)
			declaredAt: (41 to: 50)) add:
			([
			([
			([
			(head
				cover: (79 to: 82)
				declaredAt: (16 to: 19)) class ] valueCoveringAll:
				{84 to: 88}) cardinalPoint ] valueCoveringAll:
				{90 to: 102}) asString ] valueCoveringAll:
				{104 to: 111}) ] valueCoveringAll:
			{74 to: 77} ]] valueCoveringAll:
		{52 to: 60}.
	[
	(roverWindow
		cover: (116 to: 126)
		declaredAt: (116 to: 126)) ifNotNil: [
		[
		(roverWindow
			cover: (139 to: 149)
			declaredAt: (116 to: 126)) updateNewHeading:
			([
			([
			([
			(head
				cover: (169 to: 172)
				declaredAt: (16 to: 19)) class ] valueCoveringAll:
				{174 to: 178}) cardinalPoint ] valueCoveringAll:
				{180 to: 192}) asString ] valueCoveringAll:
				{194 to: 201}) ] valueCoveringAll:
			{151 to: 167} ]] valueCoveringAll:
		{128 to: 136}.
	[
	(xxxx
		cover: (206 to: 209)
		declaredAt: (206 to: 209)) do: [ :zzzz |
		[
		(zzzz
			cover: (224 to: 227)
			declaredAt: (217 to: 220)) updateNewHeading:
			(position
				cover: (247 to: 254)
				declaredAt: (247 to: 254)) ] valueCoveringAll:
			{229 to: 245} ]] valueCoveringAll:
		{211 to: 213}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headEast
	(head _ [
	(MarsRoverHeadingEast
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
headSouth
	(head _ [
	(MarsRoverHeadingSouth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
cardinalPoint
	^ #South coverAll:
		{18 to: 23}.! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
cardinalPoint
	^ #West coverAll:
		{18 to: 22}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headNorth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
headNorth
	(head _ [
	(MarsRoverHeadingNorth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headWest
	(head _ [
	(MarsRoverHeadingWest
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	(head
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) rotateLeft:
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{20 to: 30}.
	[
	(headingLog
		cover: (39 to: 48)
		declaredAt: (39 to: 48)) ifNotNil: [
		[
		(headingLog
			cover: (61 to: 70)
			declaredAt: (39 to: 48)) add:
			([
			([
			([
			(head
				cover: (77 to: 80)
				declaredAt: (15 to: 18)) class ] valueCoveringAll:
				{82 to: 86}) cardinalPoint ] valueCoveringAll:
				{88 to: 100}) asString ] valueCoveringAll:
				{102 to: 109}) ] valueCoveringAll:
			{72 to: 75} ]] valueCoveringAll:
		{50 to: 58}.
	[
	(roverWindow
		cover: (114 to: 124)
		declaredAt: (114 to: 124)) ifNotNil: [
		[
		(roverWindow
			cover: (137 to: 147)
			declaredAt: (114 to: 124)) updateNewHeading:
			([
			([
			([
			(head
				cover: (167 to: 170)
				declaredAt: (15 to: 18)) class ] valueCoveringAll:
				{172 to: 176}) cardinalPoint ] valueCoveringAll:
				{178 to: 190}) asString ] valueCoveringAll:
				{192 to: 199}) ] valueCoveringAll:
			{149 to: 165} ]] valueCoveringAll:
		{126 to: 134}.
	[
	(xxxx
		cover: (204 to: 207)
		declaredAt: (204 to: 207)) do: [ :zzzz |
		[
		(zzzz
			cover: (222 to: 225)
			declaredAt: (215 to: 218)) updateNewHeading:
			(position
				cover: (245 to: 252)
				declaredAt: (245 to: 252)) ] valueCoveringAll:
			{227 to: 243} ]] valueCoveringAll:
		{209 to: 211}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headEast ] valueCoveringAll:
		{39 to: 46}.! !

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
addWindow: aRoverWindow
	(roverWindow _ aRoverWindow
		cover: (41 to: 52)
		declaredAt: (12 to: 23))
		cover: (26 to: 36)
		declaredAt: (26 to: 36).
	[
	(roverWindow
		cover: (56 to: 66)
		declaredAt: (26 to: 36)) updateNewPosition:
		([
		(position
			cover: (87 to: 94)
			declaredAt: (87 to: 94)) asString ] valueCoveringAll:
			{96 to: 103}) ] valueCoveringAll:
		{68 to: 85}.
	[
	(roverWindow
		cover: (107 to: 117)
		declaredAt: (26 to: 36)) updateNewHeading:
		([
		([
		([
		(head
			cover: (137 to: 140)
			declaredAt: (137 to: 140)) class ] valueCoveringAll:
			{142 to: 146}) cardinalPoint ] valueCoveringAll:
			{148 to: 160}) asString ] valueCoveringAll:
			{162 to: 169}) ] valueCoveringAll:
		{119 to: 135}.! !
!Behavior method!
updateNewPosition: aPosicionPoint
	(position _ aPosicionPoint
		cover: (49 to: 62)
		declaredAt: (20 to: 33))
		cover: (37 to: 44)
		declaredAt: (37 to: 44).! !
!Behavior method!
updateNewHeading: aCardinalPoint
	(heading _ aCardinalPoint
		cover: (46 to: 59)
		declaredAt: (19 to: 32))
		cover: (35 to: 41)
		declaredAt: (35 to: 41).! !
!Behavior method!
roverPositionText
	^ position
		cover: (21 to: 28)
		declaredAt: (21 to: 28).! !
!Behavior method!
roverHeadingText
	^ heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26).! !

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{40 to: 48}.! !

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:01:39'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:09:17'!
PASSED!

!classDefinition: #PositionLog category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 12:10:14'!
Object subclass: #PositionLog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:10:06' prior: 50859484!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addPositionLog: log.
	
	marsRover process: 'f'.
	
	self assert: log lines size equals: 1.
	self assert: '0@1' equals: log lines first.
	
	! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:10:25'!
ERROR!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:10:56'!
ERROR!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:11:00'!
ERROR!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:12:45'!
ERROR!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:12:52'!
add: aString 
	self shouldBeImplemented.! !

!classDefinition: #PositionLog category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 12:13:38'!
Object subclass: #PositionLog
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:14:05' prior: 50860703!
add: aMarsRoverPosition 
	lines add: aMarsRoverPosition.! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:14:09'!
ERROR!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:14:55' overrides: 16896425!
initialize
	lines := OrderedCollection! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:15:00'!
ERROR!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:15:32'!
ERROR!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:16:21' prior: 50860722 overrides: 16896425!
initialize
	lines := OrderedCollection new! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:16:24'!
ERROR!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:16:33'!
lines
	self shouldBeImplemented.
	^lines! !
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:16:37' prior: 50860737!
lines
	^lines! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:16:39'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:17:14' prior: 50859495!
test02

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addPositionLog: log.
	
	marsRover process: 'b'.
	
	self assert: log lines size equals: 1.
	self assert: '0@-1' equals: log lines first.
	
	! !

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:17:15'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:17:46' prior: 50859506!
test03

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addPositionLog: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:17:47'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:18:10' prior: 50859518!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:18:11'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:18:31' prior: 50859529!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := PositionLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'South' equals: log lines first.
	
	! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:18:33'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:18:53' prior: 50859540!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := PositionLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'North' equals: log lines first.
	
	! !

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:18:54'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:18:53' prior: 50860926!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := PositionLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'North' equals: log lines first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:45:36' prior: 50860964!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'North' equals: log first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:36:18' prior: 50860888!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'South' equals: log first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 20:35:27' prior: 50860850!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := OrderedCollection new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log size equals: 1.
	self assert: 'East' equals: log first.
	
	! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:21:05'!
PASSED!

!classDefinition: #HeadingLog category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 12:22:22'!
Object subclass: #HeadingLog
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:22:05' prior: 50860986!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := HeadingLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'South' equals: log lines first.
	
	! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:22:25'!
ERROR!
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:23:03'!
add: aString 
	self shouldBeImplemented.! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:23:44' prior: 50861055!
add: aMarsRoverHeading 
	lines add: aMarsRoverHeading ! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:24:20'!
ERROR!
!HeadingLog methodsFor: 'nil' stamp: 'JA 6/6/2021 12:25:25' overrides: 16896425!
initialize
	lines := OrderedCollection new! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:25:29'!
ERROR!
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:25:36'!
lines
	self shouldBeImplemented.
	^lines! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:25:42' prior: 50861073!
lines
	^lines! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:25:43'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:25:45'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:26:11' prior: 50860975!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := HeadingLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'North' equals: log lines first.
	
	! !

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:26:12'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:26:30' prior: 50859551!
test07

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'West' equals: log lines first.
	
	
	! !

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:26:31'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:26:46' prior: 50859562!
test08

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'l'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	! !

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:26:48'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:27:05'!
PASSED!
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:28:51'!
headingChangedTo: aMarsRoverHeading 
	lines add: aMarsRoverHeading ! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:28:51' prior: 50861060!
add: aMarsRoverHeading 
	lines headingChangedTo: aMarsRoverHeading ! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:28:51' prior: 50861276!
headingChangedTo: aMarsRoverHeading 
	lines headingChangedTo: aMarsRoverHeading ! !

!methodRemoval: HeadingLog #add: stamp: 'JA 6/6/2021 12:28:51'!
add: aMarsRoverHeading 
	lines headingChangedTo: aMarsRoverHeading !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:28:56'!
ERROR!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:28:56'!
ERROR!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:28:56'!
ERROR!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:28:56'!
ERROR!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:28:56'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:29:44' prior: 50859704!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog headingChangedTo: position asString].
	roverWindow ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:29:44' prior: 50859660!
rotateLeft
	
	head rotateLeft: self.
	headingLog ifNotNil: [headingLog headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow updateNewHeading: head class cardinalPoint asString].
	xxxx do: [:zzzz | zzzz updateNewHeading: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:29:44' prior: 50859777!
addyyyy: zzzz
	
	xxxx headingChangedTo: zzzz.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:29:44' prior: 50859718!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog headingChangedTo: position asString].
	roverWindow  ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:29:44' prior: 50859671!
rotateRight
	
	head rotateRight: self.
	headingLog ifNotNil: [headingLog headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow updateNewHeading: head class cardinalPoint asString].
	xxxx do: [:zzzz | zzzz updateNewHeading: position].! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 12:30:59' prior: 50861325!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 12:31:08' prior: 50861353!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog add: position asString].
	roverWindow  ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:31:11'!
ERROR!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:31:11'!
ERROR!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:31:11'!
ERROR!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:31:11'!
ERROR!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:31:11'!
ERROR!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:31:11'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:31:18'!
ERROR!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:32:16' prior: 50860997!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := HeadingLog new.
	
	marsRover addHeadingLog: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:32:17'!
ERROR!
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:32:48' prior: 50861288!
headingChangedTo: aMarsRoverHeading 
	lines add: aMarsRoverHeading ! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:32:50'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:32:55'!
PASSED!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:33:51'!
positionChangedTo: aMarsRoverPosition 
	lines add: aMarsRoverPosition.! !
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:33:51' prior: 50860715!
add: aMarsRoverPosition 
	lines positionChangedTo: aMarsRoverPosition.! !
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:33:51' prior: 50861496!
positionChangedTo: aMarsRoverPosition 
	lines positionChangedTo: aMarsRoverPosition.! !

!methodRemoval: PositionLog #add: stamp: 'JA 6/6/2021 12:33:51'!
add: aMarsRoverPosition 
	lines positionChangedTo: aMarsRoverPosition.!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:34:02' prior: 50861508!
positionChangedTo: aMarsRoverPosition 
	lines add: aMarsRoverPosition.! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:34:18'!
ERROR!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:34:18'!
ERROR!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:34:18'!
ERROR!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:34:18'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:34:20'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 12:34:49' prior: 50861385!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog positionChangedTo: position asString].
	roverWindow  ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:34:50'!
FAILURE!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:35:05'!
ERROR!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:35:05'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:35:05'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 12:35:25' prior: 50861375!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog positionChangedTo: position asString].
	roverWindow ifNotNil: [roverWindow updateNewPosition: position asString].
	xxxx do: [:zzzz | zzzz updateNewPosition: position].! !

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:35:27'!
FAILURE!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:35:30'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:35:33'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:38:01'!
PASSED!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:39:34'!
positionChangedTo: aPosicionPoint 
	position := aPosicionPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:39:34' prior: 50861594!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog positionChangedTo: position asString].
	roverWindow ifNotNil: [roverWindow positionChangedTo: position asString].
	xxxx do: [:zzzz | zzzz positionChangedTo: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:39:34' prior: 50861552!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog positionChangedTo: position asString].
	roverWindow  ifNotNil: [roverWindow positionChangedTo: position asString].
	xxxx do: [:zzzz | zzzz positionChangedTo: position].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:39:34' prior: 50859769!
addWindow: aRoverWindow
	roverWindow := aRoverWindow.
	roverWindow positionChangedTo: position asString.
	roverWindow updateNewHeading: head class cardinalPoint asString.! !

!methodRemoval: RoverWindow #updateNewPosition: stamp: 'JA 6/6/2021 12:39:34'!
updateNewPosition: aPosicionPoint 
	position := aPosicionPoint.!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:39:53'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 12:40:11' prior: 50861692!
moveBackward
	
	head moveBackward: self.
	positionLog ifNotNil: [positionLog positionChangedTo: position asString].
	roverWindow ifNotNil: [roverWindow positionChangedTo: position asString].
! !

!testRun: #MarsRoverTest #test01 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'JA 6/6/2021 12:40:13'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 12:40:21' prior: 50861703!
moveForward
	
	head moveForward: self.
	positionLog ifNotNil: [positionLog positionChangedTo: position asString].
	roverWindow  ifNotNil: [roverWindow positionChangedTo: position asString].
! !

!testRun: #MarsRoverTest #test01 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'JA 6/6/2021 12:40:22'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 12:40:34' prior: 50861364!
rotateRight
	
	head rotateRight: self.
	headingLog ifNotNil: [headingLog headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow updateNewHeading: head class cardinalPoint asString].
! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 12:40:42' prior: 50861336!
rotateLeft
	
	head rotateLeft: self.
	headingLog ifNotNil: [headingLog headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow updateNewHeading: head class cardinalPoint asString].
! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:41:17'!
headingChangedTo: aCardinalPoint
	heading := aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:41:17' prior: 50861846!
rotateRight
	
	head rotateRight: self.
	headingLog ifNotNil: [headingLog headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow headingChangedTo: head class cardinalPoint asString].
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:41:17' prior: 50861714!
addWindow: aRoverWindow
	roverWindow := aRoverWindow.
	roverWindow positionChangedTo: position asString.
	roverWindow headingChangedTo: head class cardinalPoint asString.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:41:17' prior: 50861856!
rotateLeft
	
	head rotateLeft: self.
	headingLog ifNotNil: [headingLog headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow headingChangedTo: head class cardinalPoint asString].
! !

!methodRemoval: RoverWindow #updateNewHeading: stamp: 'JA 6/6/2021 12:41:17'!
updateNewHeading: aCardinalPoint
	heading := aCardinalPoint.!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:41:23'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:43:10'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:44:27'!
addObserver: anOrderedCollection 
	
	positionLog := anOrderedCollection.! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:44:27' prior: 50860684!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'f'.
	
	self assert: log lines size equals: 1.
	self assert: '0@1' equals: log lines first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:44:27' prior: 50860811!
test03

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:44:27' prior: 50860773!
test02

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'b'.
	
	self assert: log lines size equals: 1.
	self assert: '0@-1' equals: log lines first.
	
	! !

!methodRemoval: MarsRover #addPositionLog: stamp: 'JA 6/6/2021 12:44:27'!
addPositionLog: anOrderedCollection 
	
	positionLog := anOrderedCollection.!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:44:39'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 12:45:13'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx observer roverWindow headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:45:13' prior: 50861800!
moveForward
	
	head moveForward: self.
	observer ifNotNil: [observer positionChangedTo: position asString].
	roverWindow  ifNotNil: [roverWindow positionChangedTo: position asString].
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:45:14' prior: 50861958!
addObserver: anOrderedCollection 
	
	observer := anOrderedCollection.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:45:14' prior: 50861754!
moveBackward
	
	head moveBackward: self.
	observer ifNotNil: [observer positionChangedTo: position asString].
	roverWindow ifNotNil: [roverWindow positionChangedTo: position asString].
! !

!testRun: #MarsRoverTest #test01 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'JA 6/6/2021 12:45:19'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:45:22'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:46:22'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:46:32' prior: 50861424!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:46:39'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 12:47:42' prior: 50861871!
rotateRight
	
	head rotateRight: self.
	observer ifNotNil: [observer headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow headingChangedTo: head class cardinalPoint asString].
! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:47:43'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:47:43'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:47:43'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:47:43'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:47:44'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:47:44'!
FAILURE!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:47:44'!
FAILURE!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:47:44'!
FAILURE!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:47:44'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:47:44'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:47:44'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:47:44'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:47:44'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:47:47'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:48:21' prior: 50861042!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'South' equals: log lines first.
	
	! !

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:48:30'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:48:34'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:48:49' prior: 50861135!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'North' equals: log lines first.
	
	! !

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:48:50'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:48:52'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:49:07' prior: 50861173!
test07

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'West' equals: log lines first.
	
	
	! !

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:49:09'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:49:13'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:50:40'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:50:51' prior: 50859573!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.

	
	self assert: window roverPositionText equals: '0@0'.
	self assert: window roverHeadingText equals: 'South'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:51:04' prior: 50862303!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addWindow: window.

	
	self assert: window roverPositionText equals: '0@0'.
	self assert: window roverHeadingText equals: 'South'.
	
	
	! !

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:51:04'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:51:37'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:51:50' prior: 50861211!
test08

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'l'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	! !

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:51:51'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 12:52:32' prior: 50861890!
rotateLeft
	
	head rotateLeft: self.
	observer ifNotNil: [observer headingChangedTo: head class cardinalPoint asString].
	roverWindow ifNotNil: [roverWindow headingChangedTo: head class cardinalPoint asString].
! !

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:52:33'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:52:36'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:52:50' prior: 50862314!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.

	
	self assert: window roverPositionText equals: '0@0'.
	self assert: window roverHeadingText equals: 'South'.
	
	
	! !

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:52:51'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:56:50' prior: 50862456!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.

	
	self assert: window roverPositionText equals: nil.
	self assert: window roverHeadingText equals: nil.
	
	
	! !

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:56:52'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:57:26' prior: 50859584!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'f'.

	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:57:27'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:57:38' prior: 50859594!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'r'.

	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:57:43'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:57:49' prior: 50859604!
test12

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'l'.

	
	self assert: window roverHeadingText equals: 'East'.
	
	
	! !

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:57:50'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:58:02' prior: 50862582!
test12

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'l'.
	
	self assert: window roverHeadingText equals: 'East'.
	
	
	! !

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:58:05'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 12:59:21'!
test13

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'lf'.
	
	self assert: window roverHeadingText equals: 'East'.
	self assert: window roverPositionText equals: '1@0'.	
	
	! !

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 12:59:22'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:00:25'!
test14

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'lf'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	! !

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:00:27'!
ERROR!
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:00:36'!
positionChangedTo: aString 
	self shouldBeImplemented.! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:00:42' prior: 50862685!
positionChangedTo: aString 
	! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:00:55' prior: 50862690!
positionChangedTo: aMarsRoverPosition
	! !

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:00:56'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:01:26'!
test15

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'ffr'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:01:28'!
ERROR!
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:01:36'!
headingChangedTo: aString 
	self shouldBeImplemented.! !
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:01:49' prior: 50862743!
headingChangedTo: aMarsRoverHeading 
	! !

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:01:51'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:01:55'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:01:55'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:01:55'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:01:55'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:01:56'!
PASSED!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:04:01'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #HeadingLog category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:04:01'!
MarsRoverObserver subclass: #HeadingLog
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #PositionLog
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #PositionLog category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:04:17'!
MarsRoverObserver subclass: #PositionLog
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:04:28'!
PASSED!

MarsRoverObserver subclass: #RoverWindow
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #RoverWindow category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:04:43'!
MarsRoverObserver subclass: #RoverWindow
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:04:46'!
PASSED!
!MarsRoverObserver methodsFor: 'nil' stamp: 'JA 6/6/2021 13:06:14'!
headingChangedTo: aMarsRoverHeading! !
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:06:28'!
positionChangedTo: aMarsRoverPosition! !

!methodRemoval: HeadingLog #positionChangedTo: stamp: 'JA 6/6/2021 13:06:38'!
positionChangedTo: aMarsRoverPosition
	!

!methodRemoval: PositionLog #headingChangedTo: stamp: 'JA 6/6/2021 13:06:45'!
headingChangedTo: aMarsRoverHeading 
	!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:07:10'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:08:00'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:08:04'!
PASSED!

!methodRemoval: MarsRover #addHeadingLog: stamp: 'JA 6/6/2021 13:12:20'!
addHeadingLog: anOrderedCollection 

	headingLog := anOrderedCollection.
!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:12:24'!
PASSED!

!methodRemoval: MarsRover #addWindow: stamp: 'JA 6/6/2021 13:12:36'!
addWindow: aRoverWindow
	roverWindow := aRoverWindow.
	roverWindow positionChangedTo: position asString.
	roverWindow headingChangedTo: head class cardinalPoint asString.!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:12:40'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:12:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx observer roverWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: MarsRover #addyyyy: stamp: 'JA 6/6/2021 13:13:06'!
addyyyy: zzzz
	
	xxxx headingChangedTo: zzzz.!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:13:23' prior: 50862055!
moveBackward
	
	head moveBackward: self.
	observer ifNotNil: [observer positionChangedTo: position asString].! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:13:29' prior: 50862040!
moveForward
	
	head moveForward: self.
	observer ifNotNil: [observer positionChangedTo: position asString].
! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:13:44' prior: 50862392!
rotateLeft
	
	head rotateLeft: self.
	observer ifNotNil: [observer headingChangedTo: head class cardinalPoint asString].! !

!testRun: #MarsRoverTest #test01 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'JA 6/6/2021 13:13:51'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:14:08'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:14:22' prior: 50862167!
rotateRight
	
	head rotateRight: self.
	observer ifNotNil: [observer headingChangedTo: head class cardinalPoint asString].
! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:14:24'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:14:35'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx observer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:18:47'!
test16

	|marsRover log aHeadingLog aPositionLog |
	marsRover := MarsRover at: 0@0 heading: #North.
	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: log lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: log lines first.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:19:01'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'JA 6/6/2021 13:20:25'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head xxxx observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:20:25' prior: 50863106!
moveForward
	
	head moveForward: self.
	observers ifNotNil: [observers positionChangedTo: position asString].
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:20:25' prior: 50862049!
addObserver: anOrderedCollection 
	
	observers := anOrderedCollection.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:20:25' prior: 50863188!
rotateRight
	
	head rotateRight: self.
	observers ifNotNil: [observers headingChangedTo: head class cardinalPoint asString].
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:20:25' prior: 50863100!
moveBackward
	
	head moveBackward: self.
	observers ifNotNil: [observers positionChangedTo: position asString].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:20:25' prior: 50863112!
rotateLeft
	
	head rotateLeft: self.
	observers ifNotNil: [observers headingChangedTo: head class cardinalPoint asString].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:21:10' prior: 50863271!
addObserver: aMarsRoverObserver
	
	observers add: aMarsRoverObserver.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:21:13'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'JA 6/6/2021 13:21:39' prior: 50859629!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading.
	
	observers := OrderedCollection new.! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:21:53'!
ERROR!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:21:53'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:22:46' prior: 50863284!
moveBackward
	
	head moveBackward: self.
	observers do: [observers positionChangedTo: position asString].! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:22:53' prior: 50863264!
moveForward
	
	head moveForward: self.
	observers do: [observers positionChangedTo: position asString].
! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:23:04' prior: 50863277!
rotateRight
	
	head rotateRight: self.
	observers do: [observers headingChangedTo: head class cardinalPoint asString].
! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:23:09' prior: 50863291!
rotateLeft
	
	head rotateLeft: self.
	observers do: [observers headingChangedTo: head class cardinalPoint asString].! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:23:13'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:24:02'!
notifyHeadingChanged

	^ observers do: [observers headingChangedTo: head class cardinalPoint asString]! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:24:02' prior: 50863336!
rotateLeft
	
	head rotateLeft: self.
	self notifyHeadingChanged.! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:24:26' prior: 50863344!
notifyHeadingChanged

	^ observers do: [:observer | observer headingChangedTo: head class cardinalPoint asString]! !
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:24:36' prior: 50863329!
rotateRight
	
	head rotateRight: self.
	self notifyHeadingChanged.! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:24:53'!
notifyPositionChanged

	^ observers do: [observers positionChangedTo: position asString]! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:24:53' prior: 50863317!
moveBackward
	
	head moveBackward: self.
	self notifyPositionChanged.! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:25:05' prior: 50863367!
notifyPositionChanged

	^ observers do: [:observer | observer positionChangedTo: position asString]! !
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:25:14' prior: 50863323!
moveForward
	
	head moveForward: self.
	self notifyPositionChanged.! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:25:17'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:25:17'!
ERROR!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:25:17'!
ERROR!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:25:49' prior: 50863236!
test16

	|marsRover aHeadingLog aPositionLog |
	marsRover := MarsRover at: 0@0 heading: #North.
	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:25:53'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:26:52' prior: 50863427!
test16

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.
	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.			
	
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aHeadingLog.		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:26:59'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:28:25' prior: 50863480!
test16

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.
	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.			
	
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:28:26'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:29:11' prior: 50863503!
test16

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.
	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.			
	
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '1@0'.	! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:29:12'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:29:33' prior: 50863559!
test16

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.
	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.			
	
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '0@1'.	! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:29:34'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:31:28'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'JA 6/6/2021 13:31:47' prior: 50863355!
notifyHeadingChanged

	^ observers do: [:observer | observer headingChangedTo: head ]! !
!HeadingLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:32:08' prior: 50861437 overrides: 50862926!
headingChangedTo: aMarsRoverHeading 
	lines add: aMarsRoverHeading class cardinalPoint asString! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:32:17' prior: 50861866 overrides: 50862926!
headingChangedTo: aCardinalPoint
	heading := aCardinalPoint class cardinalPoint asString.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:32:20'!
PASSED!
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:32:36' prior: 50863695 overrides: 50862926!
headingChangedTo: aMarsRoverHeading
	heading := aMarsRoverHeading class cardinalPoint asString.! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:32:54' prior: 50861687 overrides: 50862930!
positionChangedTo: aMarsRoverPosition 
	position := aMarsRoverPosition.! !

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:33:13'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:36:42' prior: 50862154!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines first.	
	! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:36:43'!
FAILURE!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:36:59' prior: 50863785!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines second.	
	! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test05 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test06 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test07 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:37:00'!
PASSED!

!methodRemoval: Testxx #test05 stamp: 'JA 6/6/2021 13:37:05'!
test05

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #East.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'South' equals: log lines first.
	
	!

!methodRemoval: Testxx #test06 stamp: 'JA 6/6/2021 13:37:07'!
test06

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #West.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'North' equals: log lines first.
	
	!

!methodRemoval: Testxx #test07 stamp: 'JA 6/6/2021 13:37:11'!
test07

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'r'.
	
	self assert: log lines size equals: 1.
	self assert: 'West' equals: log lines first.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:37:47' prior: 50862379!
test08

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'll'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'North' equals: log lines second.
	
	! !

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:37:48'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:40:15' prior: 50862508!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'f'.
	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:40:16'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:40:30' prior: 50862545!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'r'.
	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:41:36'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'JA 6/6/2021 13:42:40' prior: 50863378!
notifyPositionChanged

	^ observers do: [:observer | observer positionChangedTo: position]! !
!PositionLog methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:42:50' prior: 50861518 overrides: 50862930!
positionChangedTo: aMarsRoverPosition 
	lines add: aMarsRoverPosition  asString.! !
!RoverWindow methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 13:42:57' prior: 50863744 overrides: 50862930!
positionChangedTo: aMarsRoverPosition 
	position := aMarsRoverPosition  asString.! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:43:05'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 13:43:08'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 14:14:09'!
PASSED!
!Behavior method!
at: aPosition heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeAt:
			(aPosition
				cover: (66 to: 74)
				declaredAt: (5 to: 13))
		heading:
			([
			(MarsRoverHeading
				cover: (86 to: 101)
				declaredAt: (86 to: 101)) heading:
				(aCardinalPoint
					cover: (112 to: 125)
					declaredAt: (24 to: 37)) ] valueCoveringAll:
				{103 to: 110}) ] valueCoveringAll:
		{52 to: 64. 76 to: 83}.! !
!Behavior method!
heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{28 to: 31}) subclasses ] valueCoveringAll:
		{33 to: 42})
		detect: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (84 to: 106)
				declaredAt: (58 to: 80)) isFor:
				(aCardinalPoint
					cover: (115 to: 128)
					declaredAt: (10 to: 23)) ] valueCoveringAll:
				{108 to: 113} ]
		ifFound: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (172 to: 194)
				declaredAt: (146 to: 168)) new ] valueCoveringAll:
				{196 to: 198} ]
		ifNone: [
			[
			(self coverAll:
				{214 to: 217}) error:
				([
				(MarsRover
					cover: (226 to: 234)
					declaredAt: (226 to: 234)) invalidCardinalPointErrorDescription ] valueCoveringAll:
					{236 to: 271}) ] valueCoveringAll:
				{219 to: 224} ]] valueCoveringAll:
		{47 to: 53. 134 to: 141. 204 to: 210}.! !
!Behavior method!
isFor: aCardinalPoint
	^ [
	([
	(self coverAll:
		{26 to: 29}) cardinalPoint ] valueCoveringAll:
		{31 to: 43}) =
		(aCardinalPoint
			cover: (47 to: 60)
			declaredAt: (8 to: 21)) ] valueCoveringAll:
		{45 to: 45}.! !
!Behavior method!
cardinalPoint
	^ #East coverAll:
		{18 to: 22}.! !
!Behavior method!
cardinalPoint
	^ #North coverAll:
		{18 to: 23}.! !
!Behavior method!
initializeAt: aPosition heading: aHeading
	(position _ aPosition
		cover: (57 to: 65)
		declaredAt: (15 to: 23))
		cover: (45 to: 52)
		declaredAt: (45 to: 52).
	(head _ aHeading
		cover: (77 to: 84)
		declaredAt: (34 to: 41))
		cover: (69 to: 72)
		declaredAt: (69 to: 72).
	(observers _ [
	(OrderedCollection
		cover: (103 to: 119)
		declaredAt: (103 to: 119)) new ] valueCoveringAll:
		{121 to: 123})
		cover: (90 to: 98)
		declaredAt: (90 to: 98).! !
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
addObserver: aMarsRoverObserver
	[
	(observers
		cover: (36 to: 44)
		declaredAt: (36 to: 44)) add:
		(aMarsRoverObserver
			cover: (51 to: 68)
			declaredAt: (14 to: 31)) ] valueCoveringAll:
		{46 to: 49}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) moveForward:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyPositionChanged ] valueCoveringAll:
		{46 to: 66}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(1 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !
!Behavior method!
notifyPositionChanged
	^ [
	(observers
		cover: (27 to: 35)
		declaredAt: (27 to: 35)) do: [ :observer |
		[
		(observer
			cover: (54 to: 61)
			declaredAt: (43 to: 50)) positionChangedTo:
			(position
				cover: (82 to: 89)
				declaredAt: (82 to: 89)) ] valueCoveringAll:
			{63 to: 80} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	[
	(lines
		cover: (41 to: 45)
		declaredAt: (41 to: 45)) add:
		([
		(aMarsRoverPosition
			cover: (52 to: 69)
			declaredAt: (20 to: 37)) asString ] valueCoveringAll:
			{72 to: 79}) ] valueCoveringAll:
		{47 to: 50}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #Testxx #test01 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	(head
		cover: (17 to: 20)
		declaredAt: (17 to: 20)) moveBackward:
		(self coverAll:
			{36 to: 39}) ] valueCoveringAll:
		{22 to: 34}.
	[
	(self coverAll:
		{43 to: 46}) notifyPositionChanged ] valueCoveringAll:
		{48 to: 68}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(-1 coverAll:
				{40 to: 41}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !

!testRun: #Testxx #test02 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!

!testRun: #Testxx #test03 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) rotateRight:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyHeadingChanged ] valueCoveringAll:
		{46 to: 65}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headEast
	(head _ [
	(MarsRoverHeadingEast
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
notifyHeadingChanged
	^ [
	(observers
		cover: (26 to: 34)
		declaredAt: (26 to: 34)) do: [ :observer |
		[
		(observer
			cover: (53 to: 60)
			declaredAt: (42 to: 49)) headingChangedTo:
			(head
				cover: (80 to: 83)
				declaredAt: (80 to: 83)) ] valueCoveringAll:
			{62 to: 78} ]] valueCoveringAll:
		{36 to: 38}.! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	[
	(lines
		cover: (39 to: 43)
		declaredAt: (39 to: 43)) add:
		([
		([
		([
		(aMarsRoverHeading
			cover: (50 to: 66)
			declaredAt: (19 to: 35)) class ] valueCoveringAll:
			{68 to: 72}) cardinalPoint ] valueCoveringAll:
			{74 to: 86}) asString ] valueCoveringAll:
			{88 to: 95}) ] valueCoveringAll:
		{45 to: 48}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
headSouth
	(head _ [
	(MarsRoverHeadingSouth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
cardinalPoint
	^ #South coverAll:
		{18 to: 23}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	(head
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) rotateLeft:
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{20 to: 30}.
	[
	(self coverAll:
		{39 to: 42}) notifyHeadingChanged ] valueCoveringAll:
		{44 to: 63}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
headNorth
	(head _ [
	(MarsRoverHeadingNorth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
roverPositionText
	^ position
		cover: (21 to: 28)
		declaredAt: (21 to: 28).! !
!Behavior method!
roverHeadingText
	^ heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26).! !

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	(position _ [
	(aMarsRoverPosition
		cover: (53 to: 70)
		declaredAt: (20 to: 37)) asString ] valueCoveringAll:
		{73 to: 80})
		cover: (41 to: 48)
		declaredAt: (41 to: 48).! !

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headWest
	(head _ [
	(MarsRoverHeadingWest
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	(heading _ [
	([
	([
	(aMarsRoverHeading
		cover: (49 to: 65)
		declaredAt: (19 to: 35)) class ] valueCoveringAll:
		{67 to: 71}) cardinalPoint ] valueCoveringAll:
		{73 to: 85}) asString ] valueCoveringAll:
		{87 to: 94})
		cover: (38 to: 44)
		declaredAt: (38 to: 44).! !
!Behavior method!
cardinalPoint
	^ #West coverAll:
		{18 to: 22}.! !

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(1 coverAll:
			{37 to: 37}) @
			(0 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
positionChangedTo: aMarsRoverPosition
	^ self.! !

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Behavior method!
headingChangedTo: aMarsRoverHeading
	^ self.! !

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 14:20:03'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:30:41'!
test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'f'.
	
	self assert: log lines size equals: 1.
	self assert: '0@1' equals: log lines first.
	
	! !

!methodRemoval: Testxx #test01 stamp: 'JA 6/6/2021 14:30:52'!
test01

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'f'.
	
	self assert: log lines size equals: 1.
	self assert: '0@1' equals: log lines first.
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:32:27'!
test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'b'.
	
	self assert: log lines size equals: 1.
	self assert: '0@-1' equals: log lines first.
	
	! !

!methodRemoval: Testxx #test02 stamp: 'JA 6/6/2021 14:32:27'!
test02

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'b'.
	
	self assert: log lines size equals: 1.
	self assert: '0@-1' equals: log lines first.
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:34:00'!
test03MoveTwiceAddTwoLogEntriesIntoPositionLogWithCorrectsPositions

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !

!methodRemoval: Testxx #test03 stamp: 'JA 6/6/2021 14:34:00'!
test03

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.
	
	log := PositionLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:38:30' prior: 50864501!
test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'f'.
	
	self assert: log lines size equals: 1.
	self assert: '0@1' equals: log lines first.
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:38:39' prior: 50864523!
test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'b'.
	
	self assert: log lines size equals: 1.
	self assert: '0@-1' equals: log lines first.
	
	! !

!testRun: #Testxx #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test03MoveTwiceAddTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test04 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test08 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 14:38:42'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:39:09' prior: 50864545!
test03MoveTwiceAddTwoLogEntriesIntoPositionLogWithCorrectsPositions

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:39:21' prior: 50863800!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines second.	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:43:54'!
test04RotateRightTwiceAddTwoLogEntriesIntoHeadingLogWithCorrectHeadings

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines second.	
	! !

!methodRemoval: Testxx #test04 stamp: 'JA 6/6/2021 14:43:54'!
test04

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines second.	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:46:27'!
test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'll'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'North' equals: log lines second.
	
	! !

!methodRemoval: Testxx #test08 stamp: 'JA 6/6/2021 14:46:27'!
test08

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	log := HeadingLog new.
	
	marsRover addObserver: log.
	
	marsRover process: 'll'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'North' equals: log lines second.
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:47:48'!
test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines second.	
	! !

!methodRemoval: Testxx #test04RotateRightTwiceAddTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 14:47:48'!
test04RotateRightTwiceAddTwoLogEntriesIntoHeadingLogWithCorrectHeadings

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'rr'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'South' equals: log lines second.	
	!

!testRun: #Testxx #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test03MoveTwiceAddTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test09 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test10 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test11 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 14:47:49'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:48:05'!
test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !

!methodRemoval: Testxx #test03MoveTwiceAddTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 14:48:05'!
test03MoveTwiceAddTwoLogEntriesIntoPositionLogWithCorrectsPositions

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'ff'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	!

!methodRemoval: Testxx #test09 stamp: 'JA 6/6/2021 14:48:55'!
test09

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.

	
	self assert: window roverPositionText equals: nil.
	self assert: window roverHeadingText equals: nil.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:49:08' prior: 50863919!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'f'.
	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:50:12'!
test06MoveForwardChangeRoverWindowPositionText

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'f'.
	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	! !

!methodRemoval: Testxx #test10 stamp: 'JA 6/6/2021 14:50:12'!
test10

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'f'.
	
	self assert: window roverPositionText equals: '0@-1'.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:52:05'!
test07RotateRightChangeRoverWindowHeadingText

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'r'.
	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !

!methodRemoval: Testxx #test11 stamp: 'JA 6/6/2021 14:52:05'!
test11

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'r'.
	
	self assert: window roverHeadingText equals: 'West'.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:52:29' prior: 50864848!
test07RotateRightChangeRoverWindowHeadingText

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'r'.
	
	self assert: window roverHeadingText equals: 'West'.
	
	
	! !

!testRun: #Testxx #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test06MoveForwardChangeRoverWindowPositionText stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test12 stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 14:52:57'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 14:52:57'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:53:39'!
test08RotateLeftChangeRoverWindowHeadingText

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'l'.
	
	self assert: window roverHeadingText equals: 'East'.
	
	
	! !

!methodRemoval: Testxx #test12 stamp: 'JA 6/6/2021 14:53:39'!
test12

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.
	
	window := RoverWindow new.
	
	marsRover addObserver: window.
	
	marsRover process: 'l'.
	
	self assert: window roverHeadingText equals: 'East'.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:54:03' prior: 50862631!
test13

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'lf'.
	
	self assert: window roverHeadingText equals: 'East'.
	self assert: window roverPositionText equals: '1@0'.	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:54:59' prior: 50864684!
test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'll'.
	
	self assert: log lines size equals: 2.
	self assert: 'East' equals: log lines first.
	self assert: 'North' equals: log lines second.	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:55:13' prior: 50864920!
test08RotateLeftChangeRoverWindowHeadingText

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'l'.
	
	self assert: window roverHeadingText equals: 'East'.	
	
	! !

!testRun: #Testxx #test08RotateLeftChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test06MoveForwardChangeRoverWindowPositionText stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test08RotateLeftChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test13 stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test14 stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test15 stamp: 'JA 6/6/2021 14:55:15'!
PASSED!

!testRun: #Testxx #test16 stamp: 'JA 6/6/2021 14:55:15'!
PASSED!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:55:37' prior: 50862672!
test14

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'lf'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:55:46' prior: 50862729!
test15

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'ffr'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:56:02' prior: 50863586!
test16

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.				
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '0@1'.	! !
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 14:58:10'!
test09MoveAndRotateChangeRoverWindowFields

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'lf'.
	
	self assert: window roverHeadingText equals: 'East'.
	self assert: window roverPositionText equals: '1@0'.	
	
	! !

!methodRemoval: Testxx #test13 stamp: 'JA 6/6/2021 14:58:10'!
test13

	|marsRover window|
	marsRover := MarsRover at: 0@0 heading: #South.	
	window := RoverWindow new.	
	marsRover addObserver: window.
	
	marsRover process: 'lf'.
	
	self assert: window roverHeadingText equals: 'East'.
	self assert: window roverPositionText equals: '1@0'.	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 15:02:23'!
test10MoveAndRotateAddOnlyAHeadingLogEntryIntoHeadingLog

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'lf'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	! !

!methodRemoval: Testxx #test14 stamp: 'JA 6/6/2021 15:02:23'!
test14

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'lf'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 15:03:55'!
test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'lf'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	! !

!methodRemoval: Testxx #test10MoveAndRotateAddOnlyAHeadingLogEntryIntoHeadingLog stamp: 'JA 6/6/2021 15:03:55'!
test10MoveAndRotateAddOnlyAHeadingLogEntryIntoHeadingLog

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #South.	
	log := HeadingLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'lf'.
	
	self assert: log lines size equals: 1.
	self assert: 'East' equals: log lines first.
	
	
	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 15:05:24'!
test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'ffr'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	! !

!methodRemoval: Testxx #test15 stamp: 'JA 6/6/2021 15:05:24'!
test15

	|marsRover log|
	marsRover := MarsRover at: 0@0 heading: #North.	
	log := PositionLog new.	
	marsRover addObserver: log.
	
	marsRover process: 'ffr'.
	
	self assert: log lines size equals: 2.
	self assert: '0@1' equals: log lines first.
	self assert: '0@2' equals: log lines second.	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 15:07:12'!
testMoveAndRotateAddsLogEntriesInAllObservers

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.				
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '0@1'.	! !

!methodRemoval: Testxx #test16 stamp: 'JA 6/6/2021 15:07:12'!
test16

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.				
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '0@1'.	!
!Testxx methodsFor: 'as yet unclassified' stamp: 'JA 6/6/2021 15:07:59'!
test12MoveAndRotateNotifyAllObservers

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.				
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '0@1'.	! !

!methodRemoval: Testxx #testMoveAndRotateAddsLogEntriesInAllObservers stamp: 'JA 6/6/2021 15:07:59'!
testMoveAndRotateAddsLogEntriesInAllObservers

	|marsRover aHeadingLog aPositionLog aRoverWindow |
	marsRover := MarsRover at: 0@0 heading: #North.	
	aPositionLog := PositionLog new.
	aHeadingLog := HeadingLog  new.
	aRoverWindow := RoverWindow  new.				
	marsRover addObserver: aPositionLog.
	marsRover addObserver: aHeadingLog.	
	marsRover addObserver: aRoverWindow .		
	
	marsRover process: 'fr'.
	
	self assert: aPositionLog lines size equals: 1.
	self assert: '0@1' equals: aPositionLog lines first.
	self assert: aHeadingLog lines size equals: 1.
	self assert: 'East' equals: aHeadingLog lines first.
	self assert: aRoverWindow roverHeadingText equals: 'East'.
	self assert: aRoverWindow roverPositionText equals: '0@1'.	!

!classRenamed: #Testxx as: #MarsRoverObserverTest stamp: 'JA 6/6/2021 15:08:56'!
Smalltalk renameClassNamed: #Testxx as: #MarsRoverObserverTest!
!Behavior method!
at: aPosition heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeAt:
			(aPosition
				cover: (66 to: 74)
				declaredAt: (5 to: 13))
		heading:
			([
			(MarsRoverHeading
				cover: (86 to: 101)
				declaredAt: (86 to: 101)) heading:
				(aCardinalPoint
					cover: (112 to: 125)
					declaredAt: (24 to: 37)) ] valueCoveringAll:
				{103 to: 110}) ] valueCoveringAll:
		{52 to: 64. 76 to: 83}.! !
!Behavior method!
heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{28 to: 31}) subclasses ] valueCoveringAll:
		{33 to: 42})
		detect: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (84 to: 106)
				declaredAt: (58 to: 80)) isFor:
				(aCardinalPoint
					cover: (115 to: 128)
					declaredAt: (10 to: 23)) ] valueCoveringAll:
				{108 to: 113} ]
		ifFound: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (172 to: 194)
				declaredAt: (146 to: 168)) new ] valueCoveringAll:
				{196 to: 198} ]
		ifNone: [
			[
			(self coverAll:
				{214 to: 217}) error:
				([
				(MarsRover
					cover: (226 to: 234)
					declaredAt: (226 to: 234)) invalidCardinalPointErrorDescription ] valueCoveringAll:
					{236 to: 271}) ] valueCoveringAll:
				{219 to: 224} ]] valueCoveringAll:
		{47 to: 53. 134 to: 141. 204 to: 210}.! !
!Behavior method!
isFor: aCardinalPoint
	^ [
	([
	(self coverAll:
		{26 to: 29}) cardinalPoint ] valueCoveringAll:
		{31 to: 43}) =
		(aCardinalPoint
			cover: (47 to: 60)
			declaredAt: (8 to: 21)) ] valueCoveringAll:
		{45 to: 45}.! !
!Behavior method!
cardinalPoint
	^ #East coverAll:
		{18 to: 22}.! !
!Behavior method!
cardinalPoint
	^ #North coverAll:
		{18 to: 23}.! !
!Behavior method!
initializeAt: aPosition heading: aHeading
	(position _ aPosition
		cover: (57 to: 65)
		declaredAt: (15 to: 23))
		cover: (45 to: 52)
		declaredAt: (45 to: 52).
	(head _ aHeading
		cover: (77 to: 84)
		declaredAt: (34 to: 41))
		cover: (69 to: 72)
		declaredAt: (69 to: 72).
	(observers _ [
	(OrderedCollection
		cover: (103 to: 119)
		declaredAt: (103 to: 119)) new ] valueCoveringAll:
		{121 to: 123})
		cover: (90 to: 98)
		declaredAt: (90 to: 98).! !
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
addObserver: aMarsRoverObserver
	[
	(observers
		cover: (36 to: 44)
		declaredAt: (36 to: 44)) add:
		(aMarsRoverObserver
			cover: (51 to: 68)
			declaredAt: (14 to: 31)) ] valueCoveringAll:
		{46 to: 49}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) moveForward:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyPositionChanged ] valueCoveringAll:
		{46 to: 66}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(1 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !
!Behavior method!
notifyPositionChanged
	^ [
	(observers
		cover: (27 to: 35)
		declaredAt: (27 to: 35)) do: [ :observer |
		[
		(observer
			cover: (54 to: 61)
			declaredAt: (43 to: 50)) positionChangedTo:
			(position
				cover: (82 to: 89)
				declaredAt: (82 to: 89)) ] valueCoveringAll:
			{63 to: 80} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	[
	(lines
		cover: (41 to: 45)
		declaredAt: (41 to: 45)) add:
		([
		(aMarsRoverPosition
			cover: (52 to: 69)
			declaredAt: (20 to: 37)) asString ] valueCoveringAll:
			{72 to: 79}) ] valueCoveringAll:
		{47 to: 50}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #MarsRoverObserverTest #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	(head
		cover: (17 to: 20)
		declaredAt: (17 to: 20)) moveBackward:
		(self coverAll:
			{36 to: 39}) ] valueCoveringAll:
		{22 to: 34}.
	[
	(self coverAll:
		{43 to: 46}) notifyPositionChanged ] valueCoveringAll:
		{48 to: 68}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(-1 coverAll:
				{40 to: 41}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !

!testRun: #MarsRoverObserverTest #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:12:46'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) rotateRight:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyHeadingChanged ] valueCoveringAll:
		{46 to: 65}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headEast
	(head _ [
	(MarsRoverHeadingEast
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
notifyHeadingChanged
	^ [
	(observers
		cover: (26 to: 34)
		declaredAt: (26 to: 34)) do: [ :observer |
		[
		(observer
			cover: (53 to: 60)
			declaredAt: (42 to: 49)) headingChangedTo:
			(head
				cover: (80 to: 83)
				declaredAt: (80 to: 83)) ] valueCoveringAll:
			{62 to: 78} ]] valueCoveringAll:
		{36 to: 38}.! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	[
	(lines
		cover: (39 to: 43)
		declaredAt: (39 to: 43)) add:
		([
		([
		([
		(aMarsRoverHeading
			cover: (50 to: 66)
			declaredAt: (19 to: 35)) class ] valueCoveringAll:
			{68 to: 72}) cardinalPoint ] valueCoveringAll:
			{74 to: 86}) asString ] valueCoveringAll:
			{88 to: 95}) ] valueCoveringAll:
		{45 to: 48}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
headSouth
	(head _ [
	(MarsRoverHeadingSouth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
cardinalPoint
	^ #South coverAll:
		{18 to: 23}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #MarsRoverObserverTest #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	(head
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) rotateLeft:
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{20 to: 30}.
	[
	(self coverAll:
		{39 to: 42}) notifyHeadingChanged ] valueCoveringAll:
		{44 to: 63}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
headNorth
	(head _ [
	(MarsRoverHeadingNorth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !

!testRun: #MarsRoverObserverTest #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	(position _ [
	(aMarsRoverPosition
		cover: (53 to: 70)
		declaredAt: (20 to: 37)) asString ] valueCoveringAll:
		{73 to: 80})
		cover: (41 to: 48)
		declaredAt: (41 to: 48).! !
!Behavior method!
roverPositionText
	^ position
		cover: (21 to: 28)
		declaredAt: (21 to: 28).! !

!testRun: #MarsRoverObserverTest #test06MoveForwardChangeRoverWindowPositionText stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headWest
	(head _ [
	(MarsRoverHeadingWest
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	(heading _ [
	([
	([
	(aMarsRoverHeading
		cover: (49 to: 65)
		declaredAt: (19 to: 35)) class ] valueCoveringAll:
		{67 to: 71}) cardinalPoint ] valueCoveringAll:
		{73 to: 85}) asString ] valueCoveringAll:
		{87 to: 94})
		cover: (38 to: 44)
		declaredAt: (38 to: 44).! !
!Behavior method!
cardinalPoint
	^ #West coverAll:
		{18 to: 22}.! !
!Behavior method!
roverHeadingText
	^ heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26).! !

!testRun: #MarsRoverObserverTest #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:12:46'!
PASSED!

!testRun: #MarsRoverObserverTest #test08RotateLeftChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(1 coverAll:
			{37 to: 37}) @
			(0 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverObserverTest #test09MoveAndRotateChangeRoverWindowFields stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
positionChangedTo: aMarsRoverPosition
	^ self.! !

!testRun: #MarsRoverObserverTest #test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
headingChangedTo: aMarsRoverHeading
	^ self.! !

!testRun: #MarsRoverObserverTest #test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog stamp: 'JA 6/6/2021 15:12:46'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MoveAndRotateNotifyAllObservers stamp: 'JA 6/6/2021 15:12:46'!
PASSED!
!Behavior method!
at: aPosition heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeAt:
			(aPosition
				cover: (66 to: 74)
				declaredAt: (5 to: 13))
		heading:
			([
			(MarsRoverHeading
				cover: (86 to: 101)
				declaredAt: (86 to: 101)) heading:
				(aCardinalPoint
					cover: (112 to: 125)
					declaredAt: (24 to: 37)) ] valueCoveringAll:
				{103 to: 110}) ] valueCoveringAll:
		{52 to: 64. 76 to: 83}.! !
!Behavior method!
heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{28 to: 31}) subclasses ] valueCoveringAll:
		{33 to: 42})
		detect: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (84 to: 106)
				declaredAt: (58 to: 80)) isFor:
				(aCardinalPoint
					cover: (115 to: 128)
					declaredAt: (10 to: 23)) ] valueCoveringAll:
				{108 to: 113} ]
		ifFound: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (172 to: 194)
				declaredAt: (146 to: 168)) new ] valueCoveringAll:
				{196 to: 198} ]
		ifNone: [
			[
			(self coverAll:
				{214 to: 217}) error:
				([
				(MarsRover
					cover: (226 to: 234)
					declaredAt: (226 to: 234)) invalidCardinalPointErrorDescription ] valueCoveringAll:
					{236 to: 271}) ] valueCoveringAll:
				{219 to: 224} ]] valueCoveringAll:
		{47 to: 53. 134 to: 141. 204 to: 210}.! !
!Behavior method!
isFor: aCardinalPoint
	^ [
	([
	(self coverAll:
		{26 to: 29}) cardinalPoint ] valueCoveringAll:
		{31 to: 43}) =
		(aCardinalPoint
			cover: (47 to: 60)
			declaredAt: (8 to: 21)) ] valueCoveringAll:
		{45 to: 45}.! !
!Behavior method!
cardinalPoint
	^ #East coverAll:
		{18 to: 22}.! !
!Behavior method!
cardinalPoint
	^ #North coverAll:
		{18 to: 23}.! !
!Behavior method!
initializeAt: aPosition heading: aHeading
	(position _ aPosition
		cover: (57 to: 65)
		declaredAt: (15 to: 23))
		cover: (45 to: 52)
		declaredAt: (45 to: 52).
	(head _ aHeading
		cover: (77 to: 84)
		declaredAt: (34 to: 41))
		cover: (69 to: 72)
		declaredAt: (69 to: 72).
	(observers _ [
	(OrderedCollection
		cover: (103 to: 119)
		declaredAt: (103 to: 119)) new ] valueCoveringAll:
		{121 to: 123})
		cover: (90 to: 98)
		declaredAt: (90 to: 98).! !
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
addObserver: aMarsRoverObserver
	[
	(observers
		cover: (36 to: 44)
		declaredAt: (36 to: 44)) add:
		(aMarsRoverObserver
			cover: (51 to: 68)
			declaredAt: (14 to: 31)) ] valueCoveringAll:
		{46 to: 49}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) moveForward:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyPositionChanged ] valueCoveringAll:
		{46 to: 66}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(1 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !
!Behavior method!
notifyPositionChanged
	^ [
	(observers
		cover: (27 to: 35)
		declaredAt: (27 to: 35)) do: [ :observer |
		[
		(observer
			cover: (54 to: 61)
			declaredAt: (43 to: 50)) positionChangedTo:
			(position
				cover: (82 to: 89)
				declaredAt: (82 to: 89)) ] valueCoveringAll:
			{63 to: 80} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	[
	(lines
		cover: (41 to: 45)
		declaredAt: (41 to: 45)) add:
		([
		(aMarsRoverPosition
			cover: (52 to: 69)
			declaredAt: (20 to: 37)) asString ] valueCoveringAll:
			{72 to: 79}) ] valueCoveringAll:
		{47 to: 50}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #MarsRoverObserverTest #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	(head
		cover: (17 to: 20)
		declaredAt: (17 to: 20)) moveBackward:
		(self coverAll:
			{36 to: 39}) ] valueCoveringAll:
		{22 to: 34}.
	[
	(self coverAll:
		{43 to: 46}) notifyPositionChanged ] valueCoveringAll:
		{48 to: 68}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(-1 coverAll:
				{40 to: 41}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !

!testRun: #MarsRoverObserverTest #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) rotateRight:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyHeadingChanged ] valueCoveringAll:
		{46 to: 65}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headEast
	(head _ [
	(MarsRoverHeadingEast
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
notifyHeadingChanged
	^ [
	(observers
		cover: (26 to: 34)
		declaredAt: (26 to: 34)) do: [ :observer |
		[
		(observer
			cover: (53 to: 60)
			declaredAt: (42 to: 49)) headingChangedTo:
			(head
				cover: (80 to: 83)
				declaredAt: (80 to: 83)) ] valueCoveringAll:
			{62 to: 78} ]] valueCoveringAll:
		{36 to: 38}.! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	[
	(lines
		cover: (39 to: 43)
		declaredAt: (39 to: 43)) add:
		([
		([
		([
		(aMarsRoverHeading
			cover: (50 to: 66)
			declaredAt: (19 to: 35)) class ] valueCoveringAll:
			{68 to: 72}) cardinalPoint ] valueCoveringAll:
			{74 to: 86}) asString ] valueCoveringAll:
			{88 to: 95}) ] valueCoveringAll:
		{45 to: 48}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
headSouth
	(head _ [
	(MarsRoverHeadingSouth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
cardinalPoint
	^ #South coverAll:
		{18 to: 23}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #MarsRoverObserverTest #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	(head
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) rotateLeft:
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{20 to: 30}.
	[
	(self coverAll:
		{39 to: 42}) notifyHeadingChanged ] valueCoveringAll:
		{44 to: 63}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
headNorth
	(head _ [
	(MarsRoverHeadingNorth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !

!testRun: #MarsRoverObserverTest #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	(position _ [
	(aMarsRoverPosition
		cover: (53 to: 70)
		declaredAt: (20 to: 37)) asString ] valueCoveringAll:
		{73 to: 80})
		cover: (41 to: 48)
		declaredAt: (41 to: 48).! !
!Behavior method!
roverPositionText
	^ position
		cover: (21 to: 28)
		declaredAt: (21 to: 28).! !

!testRun: #MarsRoverObserverTest #test06MoveForwardChangeRoverWindowPositionText stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headWest
	(head _ [
	(MarsRoverHeadingWest
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	(heading _ [
	([
	([
	(aMarsRoverHeading
		cover: (49 to: 65)
		declaredAt: (19 to: 35)) class ] valueCoveringAll:
		{67 to: 71}) cardinalPoint ] valueCoveringAll:
		{73 to: 85}) asString ] valueCoveringAll:
		{87 to: 94})
		cover: (38 to: 44)
		declaredAt: (38 to: 44).! !
!Behavior method!
cardinalPoint
	^ #West coverAll:
		{18 to: 22}.! !
!Behavior method!
roverHeadingText
	^ heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26).! !

!testRun: #MarsRoverObserverTest #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test08RotateLeftChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(1 coverAll:
			{37 to: 37}) @
			(0 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverObserverTest #test09MoveAndRotateChangeRoverWindowFields stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
positionChangedTo: aMarsRoverPosition
	^ self.! !

!testRun: #MarsRoverObserverTest #test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
headingChangedTo: aMarsRoverHeading
	^ self.! !

!testRun: #MarsRoverObserverTest #test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MoveAndRotateNotifyAllObservers stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
isAt: aPosition heading: aCardinalPoint
	^ [
	([
	(position
		cover: (44 to: 51)
		declaredAt: (44 to: 51)) =
		(aPosition
			cover: (55 to: 63)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{53 to: 53}) and: [
		[
		(head
			cover: (72 to: 75)
			declaredAt: (72 to: 75)) isHeading:
			(aCardinalPoint
				cover: (88 to: 101)
				declaredAt: (26 to: 39)) ] valueCoveringAll:
			{77 to: 86} ]] valueCoveringAll:
		{65 to: 68}.! !
!Behavior method!
isHeading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{30 to: 33}) class ] valueCoveringAll:
		{35 to: 39}) isFor:
		(aCardinalPoint
			cover: (48 to: 61)
			declaredAt: (12 to: 25)) ] valueCoveringAll:
		{41 to: 46}.! !

!testRun: #MarsRoverTest #test01 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headWest ] valueCoveringAll:
		{39 to: 46}.! !

!testRun: #MarsRoverTest #test05 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test06 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(-1 coverAll:
			{37 to: 38}) @
			(0 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test09 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test12 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (15 to: 24)) moveEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headNorth ] valueCoveringAll:
		{40 to: 48}.! !

!testRun: #MarsRoverTest #test14 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headSouth ] valueCoveringAll:
		{39 to: 47}.! !

!testRun: #MarsRoverTest #test15 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!
!Behavior method!
invalidCardinalPointErrorDescription
	^ 'Invalid cardinal point' coverAll:
		{42 to: 65}.! !

!testRun: #MarsRoverTest #test16 stamp: 'JA 6/6/2021 15:14:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MoveForwardChangeRoverWindowPositionText stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test08RotateLeftChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MoveAndRotateChangeRoverWindowFields stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MoveAndRotateNotifyAllObservers stamp: 'JA 6/6/2021 15:16:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MoveForwardChangeRoverWindowPositionText stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test07RotateRightChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test08RotateLeftChangeRoverWindowHeadingText stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MoveAndRotateChangeRoverWindowFields stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MoveAndRotateNotifyAllObservers stamp: 'JA 6/6/2021 15:17:10'!
PASSED!

----QUIT----(6 June 2021 15:17:22) CuisUniversity-4532.image priorSource: 16910160!
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:51:06' prior: 51022737!
headingChangedTo: aMarsRoverHeading

	aMarsRoverHeading notifyObserver: self.! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'ET 6/6/2021 19:53:43'!
notifyObserver: aMarsRoverObserver
	
	aMarsRoverObserver headingChangedToEast: self.! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'ET 6/6/2021 19:53:58'!
notifyObserver: aMarsRoverObserver
	
	aMarsRoverObserver headingChangedToNorth: self.! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'ET 6/6/2021 19:54:07'!
notifyObserver: aMarsRoverObserver
	
	aMarsRoverObserver headingChangedToSouth: self.! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'ET 6/6/2021 19:54:13'!
notifyObserver: aMarsRoverObserver
	
	aMarsRoverObserver headingChangedToSouth: self.! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'ET 6/6/2021 19:54:17' prior: 51022861!
notifyObserver: aMarsRoverObserver
	
	aMarsRoverObserver headingChangedToWest: self.! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:55:02'!
headingChangedToEast: aMarsRoverHeadingEast

	self subclassResponsibility.! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:55:10'!
headingChangedToWest: aMarsRoverHeadingWest

	self subclassResponsibility.! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:55:16'!
headingChangedToNorth: aMarsRoverHeadingNorth

	self subclassResponsibility.! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:55:21' prior: 51022873!
headingChangedToEast: aMarsRoverHeadingEast

	self subclassResponsibility.! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:55:28'!
headingChangedToSouth: aMarsRoverHeadingSouth

	self subclassResponsibility.! !
!HeadingLog methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:56:03' overrides: 51022889!
headingChangedToEast: aMarsRoverHeadingEast
	lines add: 'East'.! !
!HeadingLog methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:56:15' overrides: 51022878!
headingChangedToWest: aMarsRoverHeadingWest
	lines add: 'West'.! !
!HeadingLog methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:56:28' overrides: 51022894!
headingChangedToSouth: aMarsRoverHeadingSouth
	lines add: 'South'.! !
!HeadingLog methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:56:40' overrides: 51022883!
headingChangedToNorth: aMarsRoverHeadingNorth
	lines add: 'North'.! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:57:10' prior: 51022878!
headingChangedToWest: aMarsRoverHeadingWest! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:57:15' prior: 51022894!
headingChangedToSouth: aMarsRoverHeadingSouth! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:57:19' prior: 51022883!
headingChangedToNorth: aMarsRoverHeadingNorth! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:57:22' prior: 51022889!
headingChangedToEast: aMarsRoverHeadingEast! !

!methodRemoval: HeadingLog #headingChangedTo: stamp: 'ET 6/6/2021 19:57:47'!
headingChangedTo: aMarsRoverHeading 
	lines add: aMarsRoverHeading class cardinalPoint asString!

0@0 printString.!

(0@0) printString. !
!PositionLog methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:58:27' prior: 51022794 overrides: 51022741!
positionChangedTo: aMarsRoverPosition 
	lines add: aMarsRoverPosition  printString.! !

!methodRemoval: RoverWindow #headingChangedTo: stamp: 'ET 6/6/2021 19:58:43'!
headingChangedTo: aMarsRoverHeading
	heading := aMarsRoverHeading class cardinalPoint asString.!
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:59:05' overrides: 51022937!
headingChangedToEast: aMarsRoverHeadingEast
	heading := 'East'.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:59:26' overrides: 51022922!
headingChangedToWest: aMarsRoverHeadingWest
	heading := 'West'.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:59:36' overrides: 51022932!
headingChangedToNorth: aMarsRoverHeadingNorth
	heading := 'North'.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:59:42' prior: 51022971 overrides: 51022932!
headingChangedToNorth: aMarsRoverHeadingSouth
	heading := 'South'.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 19:59:36' prior: 51022977 overrides: 51022932!
headingChangedToNorth: aMarsRoverHeadingNorth
	heading := 'North'.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 20:00:00' overrides: 51022927!
headingChangedToSouth: aMarsRoverHeadingSouth
	heading := 'South'.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 20:00:33' prior: 51022819 overrides: 51022741!
positionChangedTo: aMarsRoverPosition 
	position := aMarsRoverPosition  printString.! !
!RoverWindow methodsFor: 'notifications' stamp: 'ET 6/6/2021 20:00:35' prior: 51022995 overrides: 51022741!
positionChangedTo: aMarsRoverPosition 
	position := aMarsRoverPosition printString.! !
!Behavior method!
at: aPosition heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeAt:
			(aPosition
				cover: (66 to: 74)
				declaredAt: (5 to: 13))
		heading:
			([
			(MarsRoverHeading
				cover: (86 to: 101)
				declaredAt: (86 to: 101)) heading:
				(aCardinalPoint
					cover: (112 to: 125)
					declaredAt: (24 to: 37)) ] valueCoveringAll:
				{103 to: 110}) ] valueCoveringAll:
		{52 to: 64. 76 to: 83}.! !
!Behavior method!
heading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{28 to: 31}) subclasses ] valueCoveringAll:
		{33 to: 42})
		detect: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (84 to: 106)
				declaredAt: (58 to: 80)) isFor:
				(aCardinalPoint
					cover: (115 to: 128)
					declaredAt: (10 to: 23)) ] valueCoveringAll:
				{108 to: 113} ]
		ifFound: [ :aMarsRoverPositionClass |
			[
			(aMarsRoverPositionClass
				cover: (172 to: 194)
				declaredAt: (146 to: 168)) new ] valueCoveringAll:
				{196 to: 198} ]
		ifNone: [
			[
			(self coverAll:
				{214 to: 217}) error:
				([
				(MarsRover
					cover: (226 to: 234)
					declaredAt: (226 to: 234)) invalidCardinalPointErrorDescription ] valueCoveringAll:
					{236 to: 271}) ] valueCoveringAll:
				{219 to: 224} ]] valueCoveringAll:
		{47 to: 53. 134 to: 141. 204 to: 210}.! !
!Behavior method!
isFor: aCardinalPoint
	^ [
	([
	(self coverAll:
		{26 to: 29}) cardinalPoint ] valueCoveringAll:
		{31 to: 43}) =
		(aCardinalPoint
			cover: (47 to: 60)
			declaredAt: (8 to: 21)) ] valueCoveringAll:
		{45 to: 45}.! !
!Behavior method!
cardinalPoint
	^ #East coverAll:
		{18 to: 22}.! !
!Behavior method!
cardinalPoint
	^ #North coverAll:
		{18 to: 23}.! !
!Behavior method!
initializeAt: aPosition heading: aHeading
	(position _ aPosition
		cover: (57 to: 65)
		declaredAt: (15 to: 23))
		cover: (45 to: 52)
		declaredAt: (45 to: 52).
	(head _ aHeading
		cover: (77 to: 84)
		declaredAt: (34 to: 41))
		cover: (69 to: 72)
		declaredAt: (69 to: 72).
	(observers _ [
	(OrderedCollection
		cover: (103 to: 119)
		declaredAt: (103 to: 119)) new ] valueCoveringAll:
		{121 to: 123})
		cover: (90 to: 98)
		declaredAt: (90 to: 98).! !
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
addObserver: aMarsRoverObserver
	[
	(observers
		cover: (36 to: 44)
		declaredAt: (36 to: 44)) add:
		(aMarsRoverObserver
			cover: (51 to: 68)
			declaredAt: (14 to: 31)) ] valueCoveringAll:
		{46 to: 49}.! !
!Behavior method!
process: aSequenceOfCommands
	[
	(aSequenceOfCommands
		cover: (32 to: 50)
		declaredAt: (10 to: 28)) do: [ :aCommand |
		[
		(self coverAll:
			{69 to: 72}) processCommand:
			(aCommand
				cover: (90 to: 97)
				declaredAt: (58 to: 65)) ] valueCoveringAll:
			{74 to: 88} ]] valueCoveringAll:
		{52 to: 54}.! !
!Behavior method!
processCommand: aCommand
	[
	([
	(self coverAll:
		{29 to: 32}) isForwardCommand:
		(aCommand
			cover: (52 to: 59)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{34 to: 50}) ifTrue: [ ^ [
		(self coverAll:
			{74 to: 77}) moveForward ] valueCoveringAll:
			{79 to: 89} ]] valueCoveringAll:
		{62 to: 68}.
	[
	([
	(self coverAll:
		{96 to: 99}) isBackwardCommand:
		(aCommand
			cover: (120 to: 127)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{101 to: 118}) ifTrue: [ ^ [
		(self coverAll:
			{142 to: 145}) moveBackward ] valueCoveringAll:
			{147 to: 158} ]] valueCoveringAll:
		{130 to: 136}.
	[
	([
	(self coverAll:
		{165 to: 168}) isRotateRightCommand:
		(aCommand
			cover: (192 to: 199)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{170 to: 190}) ifTrue: [ ^ [
		(self coverAll:
			{214 to: 217}) rotateRight ] valueCoveringAll:
			{219 to: 229} ]] valueCoveringAll:
		{202 to: 208}.
	[
	([
	(self coverAll:
		{236 to: 239}) isRotateLeftCommand:
		(aCommand
			cover: (262 to: 269)
			declaredAt: (17 to: 24)) ] valueCoveringAll:
		{241 to: 260}) ifTrue: [ ^ [
		(self coverAll:
			{284 to: 287}) rotateLeft ] valueCoveringAll:
			{289 to: 298} ]] valueCoveringAll:
		{272 to: 278}.
	[
	(self coverAll:
		{305 to: 308}) signalInvalidCommand ] valueCoveringAll:
		{310 to: 329}.! !
!Behavior method!
isForwardCommand: aCommand
	^ [
	(aCommand
		cover: (31 to: 38)
		declaredAt: (19 to: 26)) =
		($f coverAll:
			{42 to: 43}) ] valueCoveringAll:
		{40 to: 40}.! !
!Behavior method!
moveForward
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) moveForward:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyPositionChanged ] valueCoveringAll:
		{46 to: 66}.! !
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveNorth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
moveNorth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(1 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !
!Behavior method!
notifyPositionChanged
	^ [
	(observers
		cover: (27 to: 35)
		declaredAt: (27 to: 35)) do: [ :observer |
		[
		(observer
			cover: (54 to: 61)
			declaredAt: (43 to: 50)) positionChangedTo:
			(position
				cover: (82 to: 89)
				declaredAt: (82 to: 89)) ] valueCoveringAll:
			{63 to: 80} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	[
	(lines
		cover: (41 to: 45)
		declaredAt: (41 to: 45)) add:
		([
		(aMarsRoverPosition
			cover: (52 to: 69)
			declaredAt: (20 to: 37)) printString ] valueCoveringAll:
			{72 to: 82}) ] valueCoveringAll:
		{47 to: 50}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #MarsRoverObserverTest #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'ET 6/6/2021 20:00:39'!
PASSED!
!Behavior method!
isBackwardCommand: aCommand
	^ [
	(aCommand
		cover: (32 to: 39)
		declaredAt: (20 to: 27)) =
		($b coverAll:
			{43 to: 44}) ] valueCoveringAll:
		{41 to: 41}.! !
!Behavior method!
moveBackward
	[
	(head
		cover: (17 to: 20)
		declaredAt: (17 to: 20)) moveBackward:
		(self coverAll:
			{36 to: 39}) ] valueCoveringAll:
		{22 to: 34}.
	[
	(self coverAll:
		{43 to: 46}) notifyPositionChanged ] valueCoveringAll:
		{48 to: 68}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveSouth ] valueCoveringAll:
		{41 to: 49}.! !
!Behavior method!
moveSouth
	(position _ [
	(position
		cover: (14 to: 21)
		declaredAt: (14 to: 21)) +
		([
		(0 coverAll:
			{38 to: 38}) @
			(-1 coverAll:
				{40 to: 41}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{35 to: 35})
		cover: (26 to: 33)
		declaredAt: (14 to: 21).! !

!testRun: #MarsRoverObserverTest #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'ET 6/6/2021 20:00:39'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'ET 6/6/2021 20:00:39'!
PASSED!
!Behavior method!
initialize
	(lines _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
isRotateRightCommand: aCommand
	^ [
	(aCommand
		cover: (35 to: 42)
		declaredAt: (23 to: 30)) =
		($r coverAll:
			{46 to: 47}) ] valueCoveringAll:
		{44 to: 44}.! !
!Behavior method!
rotateRight
	[
	(head
		cover: (16 to: 19)
		declaredAt: (16 to: 19)) rotateRight:
		(self coverAll:
			{34 to: 37}) ] valueCoveringAll:
		{21 to: 32}.
	[
	(self coverAll:
		{41 to: 44}) notifyHeadingChanged ] valueCoveringAll:
		{46 to: 65}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headEast
	(head _ [
	(MarsRoverHeadingEast
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
notifyHeadingChanged
	^ [
	(observers
		cover: (26 to: 34)
		declaredAt: (26 to: 34)) do: [ :observer |
		[
		(observer
			cover: (53 to: 60)
			declaredAt: (42 to: 49)) headingChangedTo:
			(head
				cover: (80 to: 83)
				declaredAt: (80 to: 83)) ] valueCoveringAll:
			{62 to: 78} ]] valueCoveringAll:
		{36 to: 38}.! !
!Behavior method!
headingChangedTo: aMarsRoverHeading
	[
	(aMarsRoverHeading
		cover: (39 to: 55)
		declaredAt: (19 to: 35)) notifyObserver:
		(self coverAll:
			{73 to: 76}) ] valueCoveringAll:
		{57 to: 71}.! !
!Behavior method!
notifyObserver: aMarsRoverObserver
	[
	(aMarsRoverObserver
		cover: (39 to: 56)
		declaredAt: (17 to: 34)) headingChangedToEast:
		(self coverAll:
			{80 to: 83}) ] valueCoveringAll:
		{58 to: 78}.! !
!Behavior method!
headingChangedToEast: aMarsRoverHeadingEast
	[
	(lines
		cover: (46 to: 50)
		declaredAt: (46 to: 50)) add:
		('East' coverAll:
			{57 to: 62}) ] valueCoveringAll:
		{52 to: 55}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
headSouth
	(head _ [
	(MarsRoverHeadingSouth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
notifyObserver: aMarsRoverObserver
	[
	(aMarsRoverObserver
		cover: (39 to: 56)
		declaredAt: (17 to: 34)) headingChangedToSouth:
		(self coverAll:
			{81 to: 84}) ] valueCoveringAll:
		{58 to: 79}.! !
!Behavior method!
headingChangedToSouth: aMarsRoverHeadingSouth
	[
	(lines
		cover: (48 to: 52)
		declaredAt: (48 to: 52)) add:
		('South' coverAll:
			{59 to: 65}) ] valueCoveringAll:
		{54 to: 57}.! !
!Behavior method!
lines
	^ lines
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #MarsRoverObserverTest #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'ET 6/6/2021 20:00:39'!
PASSED!
!Behavior method!
cardinalPoint
	^ #South coverAll:
		{18 to: 23}.! !
!Behavior method!
isRotateLeftCommand: aCommand
	^ [
	(aCommand
		cover: (34 to: 41)
		declaredAt: (22 to: 29)) =
		($l coverAll:
			{45 to: 46}) ] valueCoveringAll:
		{43 to: 43}.! !
!Behavior method!
rotateLeft
	[
	(head
		cover: (15 to: 18)
		declaredAt: (15 to: 18)) rotateLeft:
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{20 to: 30}.
	[
	(self coverAll:
		{39 to: 42}) notifyHeadingChanged ] valueCoveringAll:
		{44 to: 63}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headEast ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headNorth ] valueCoveringAll:
		{39 to: 47}.! !
!Behavior method!
headNorth
	(head _ [
	(MarsRoverHeadingNorth
		cover: (22 to: 42)
		declaredAt: (22 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
notifyObserver: aMarsRoverObserver
	[
	(aMarsRoverObserver
		cover: (39 to: 56)
		declaredAt: (17 to: 34)) headingChangedToNorth:
		(self coverAll:
			{81 to: 84}) ] valueCoveringAll:
		{58 to: 79}.! !
!Behavior method!
headingChangedToNorth: aMarsRoverHeadingNorth
	[
	(lines
		cover: (48 to: 52)
		declaredAt: (48 to: 52)) add:
		('North' coverAll:
			{59 to: 65}) ] valueCoveringAll:
		{54 to: 57}.! !

!testRun: #MarsRoverObserverTest #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'ET 6/6/2021 20:00:39'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveSouth ] valueCoveringAll:
		{40 to: 48}.! !
!Behavior method!
positionChangedTo: aMarsRoverPosition
	(position _ [
	(aMarsRoverPosition
		cover: (53 to: 70)
		declaredAt: (20 to: 37)) printString ] valueCoveringAll:
		{72 to: 82})
		cover: (41 to: 48)
		declaredAt: (41 to: 48).! !
!Behavior method!
roverPositionText
	^ position
		cover: (21 to: 28)
		declaredAt: (21 to: 28).! !

!testRun: #MarsRoverObserverTest #test06MoveForwardChangeRoverWindowPositionText stamp: 'ET 6/6/2021 20:00:39'!
PASSED!
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
headWest
	(head _ [
	(MarsRoverHeadingWest
		cover: (21 to: 40)
		declaredAt: (21 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 16)
		declaredAt: (13 to: 16).! !
!Behavior method!
notifyObserver: aMarsRoverObserver
	[
	(aMarsRoverObserver
		cover: (39 to: 56)
		declaredAt: (17 to: 34)) headingChangedToWest:
		(self coverAll:
			{80 to: 83}) ] valueCoveringAll:
		{58 to: 78}.! !
!Behavior method!
headingChangedToWest: aMarsRoverHeadingWest
	(heading _ 'West' coverAll:
		{57 to: 62})
		cover: (46 to: 52)
		declaredAt: (46 to: 52).! !
!Behavior method!
roverHeadingText
	^ heading
		cover: (20 to: 26)
		declaredAt: (20 to: 26).! !

!testRun: #MarsRoverObserverTest #test07RotateRightChangeRoverWindowHeadingText stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
headingChangedToEast: aMarsRoverHeadingEast
	(heading _ 'East' coverAll:
		{57 to: 62})
		cover: (46 to: 52)
		declaredAt: (46 to: 52).! !

!testRun: #MarsRoverObserverTest #test08RotateLeftChangeRoverWindowHeadingText stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
moveEast
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(1 coverAll:
			{37 to: 37}) @
			(0 coverAll:
				{39 to: 39}) ] valueCoveringAll:
			{38 to: 38}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverObserverTest #test09MoveAndRotateChangeRoverWindowFields stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
positionChangedTo: aMarsRoverPosition
	^ self.! !

!testRun: #MarsRoverObserverTest #test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
headingChangedToEast: aMarsRoverHeadingEast
	^ self.! !

!testRun: #MarsRoverObserverTest #test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MoveAndRotateNotifyAllObservers stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
isAt: aPosition heading: aCardinalPoint
	^ [
	([
	(position
		cover: (44 to: 51)
		declaredAt: (44 to: 51)) =
		(aPosition
			cover: (55 to: 63)
			declaredAt: (7 to: 15)) ] valueCoveringAll:
		{53 to: 53}) and: [
		[
		(head
			cover: (72 to: 75)
			declaredAt: (72 to: 75)) isHeading:
			(aCardinalPoint
				cover: (88 to: 101)
				declaredAt: (26 to: 39)) ] valueCoveringAll:
			{77 to: 86} ]] valueCoveringAll:
		{65 to: 68}.! !
!Behavior method!
isHeading: aCardinalPoint
	^ [
	([
	(self coverAll:
		{30 to: 33}) class ] valueCoveringAll:
		{35 to: 39}) isFor:
		(aCardinalPoint
			cover: (48 to: 61)
			declaredAt: (12 to: 25)) ] valueCoveringAll:
		{41 to: 46}.! !

!testRun: #MarsRoverTest #test01 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headWest ] valueCoveringAll:
		{39 to: 46}.! !
!Behavior method!
cardinalPoint
	^ #West coverAll:
		{18 to: 22}.! !

!testRun: #MarsRoverTest #test05 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
signalInvalidCommand
	[
	(self coverAll:
		{25 to: 28}) error:
		([
		(self coverAll:
			{37 to: 40}) invalidCommandErrorDescription ] valueCoveringAll:
			{42 to: 71}) ] valueCoveringAll:
		{30 to: 35}.! !
!Behavior method!
invalidCommandErrorDescription
	^ 'Invalid command' coverAll:
		{36 to: 52}.! !

!testRun: #MarsRoverTest #test06 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveWest ] valueCoveringAll:
		{41 to: 48}.! !
!Behavior method!
moveWest
	(position _ [
	(position
		cover: (13 to: 20)
		declaredAt: (13 to: 20)) +
		([
		(-1 coverAll:
			{37 to: 38}) @
			(0 coverAll:
				{40 to: 40}) ] valueCoveringAll:
			{39 to: 39}) ] valueCoveringAll:
		{34 to: 34})
		cover: (25 to: 32)
		declaredAt: (13 to: 20).! !

!testRun: #MarsRoverTest #test09 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (30 to: 39)
		declaredAt: (15 to: 24)) moveNorth ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #MarsRoverTest #test12 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
moveForward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) moveWest ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
moveBackward: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (15 to: 24)) moveEast ] valueCoveringAll:
		{40 to: 47}.! !
!Behavior method!
rotateRight: aMarsRover
	^ [
	(aMarsRover
		cover: (29 to: 38)
		declaredAt: (14 to: 23)) headNorth ] valueCoveringAll:
		{40 to: 48}.! !

!testRun: #MarsRoverTest #test14 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
rotateLeft: aMarsRover
	^ [
	(aMarsRover
		cover: (28 to: 37)
		declaredAt: (13 to: 22)) headSouth ] valueCoveringAll:
		{39 to: 47}.! !

!testRun: #MarsRoverTest #test15 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!Behavior method!
invalidCardinalPointErrorDescription
	^ 'Invalid cardinal point' coverAll:
		{42 to: 65}.! !

!testRun: #MarsRoverTest #test16 stamp: 'ET 6/6/2021 20:00:40'!
PASSED!
!MarsRoverHeading methodsFor: 'observer notification' stamp: 'ET 6/6/2021 20:03:07'!
notifyObserver: aMarsRoverObserver
	
	self subclassResponsibility.! !

!testRun: #MarsRoverObserverTest #test01MoveForwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MoveBackwardAddALogEntryIntoPositionLogWithCorrectPosition stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test03MoveTwiceAddsTwoLogEntriesIntoPositionLogWithCorrectsPositions stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test04RotateRightTwiceAddsTwoLogEntriesIntoHeadingLogWithCorrectHeadings stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test05RotateLeftTwiceAddsTwoEntriesIntoHeadingLogWithCorrectHeading stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test06MoveForwardChangeRoverWindowPositionText stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test07RotateRightChangeRoverWindowHeadingText stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test08RotateLeftChangeRoverWindowHeadingText stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MoveAndRotateChangeRoverWindowFields stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MoveAndRotateAddsJustOneLogEntryIntoHeadingLog stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test11MoveTwiceAndRotateAddsTwoLogEntriesIntoPositionLog stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverObserverTest #test12MoveAndRotateNotifyAllObservers stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ET 6/6/2021 20:05:26'!
PASSED!